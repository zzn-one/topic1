{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport jwt_prase from '@/assets/js/jwtPrase';\nimport DialogAddTask from '@/components/home/admin/DialogAddTask.vue';\nexport default {\n  name: \"TaskPublish\",\n  components: [DialogAddTask],\n  data() {\n    return {\n      taskList: [],\n      historyTaskList: [],\n      dialogVisible: false\n    };\n  },\n  methods: {\n    //显示dialog\n    openDialog() {\n      this.dialogVisible = true;\n    },\n    closeDialog(val) {\n      this.dialogVisible = val;\n    },\n    //删除任务\n    cancelTask(row) {\n      this.$confirm(\"此操作将永久删除该任务: \" + row.name + \" , 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        //发送请求，删除row.id 对应的任务\n        this.$message({\n          type: \"success\",\n          message: \"删除成功!\"\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"已取消删除\"\n        });\n      });\n    },\n    //获取任务列表\n    async getTaskList() {\n      //根据jwt.id（aid）获取用户信息（的college）\n      const user = await this.$http.get('/userAdmin/' + jwt_prase().id);\n      if (user.data.code === 200) {\n        //根据college获取任务列表\n        const tasks = await this.$http.get('/task/' + user.data.data.college);\n        if (tasks.data.code === 200) {\n          //处理数据\n          tasks.data.data.forEach(task => {\n            if (task.status === 0) {\n              //未开始任务列表\n              this.taskList.push(task);\n            } else {\n              //历史任务列表\n              this.historyTaskList.push(task);\n            }\n          });\n          this.setTaskList(user.data.data.college);\n        }\n      }\n    },\n    //处理task列表\n    async setTaskList(college) {\n      //获取majorList\n      const majorResp = await this.$http.get('/dict/major/' + college);\n      let majorList;\n      if (majorResp.data.code === 200) {\n        majorList = majorResp.data.data;\n      }\n      //获取statusList\n      const statusResp = await this.$http.get('/dict/taskStatus');\n      let statusList;\n      if (statusResp.data.code === 200) {\n        statusList = statusResp.data.data;\n      }\n      const _this = this;\n      this.taskList.forEach((task, index, arr) => {\n        majorList.forEach(major => {\n          if (major.majorId == task.major) {\n            task.major = major.description;\n          }\n        });\n        statusList.forEach(status => {\n          if (status.status == task.status) {\n            task.status = status.description;\n          }\n        });\n        _this.taskList = arr;\n      });\n      this.historyTaskList.forEach((task, index, arr) => {\n        majorList.forEach(major => {\n          if (major.majorId == task.major) {\n            task.major = major.description;\n          }\n        });\n\n        // statusList.forEach((status) => {\n        //     if (status.status == task.status) {\n        //         task.status = status.description\n        //     }\n        // })\n        _this.historyTaskList = arr;\n      });\n    }\n  },\n  created() {\n    this.getTaskList();\n  },\n  components: {\n    DialogAddTask\n  }\n};","map":{"version":3,"mappings":";AA6DA;AACA;AAEA;EACAA;EACAC,aACAC,cACA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;MACA;QACA;QACA;UACAA;UACAC;QACA;MACA;QACA;UACAD;UACAC;QACA;MACA;IACA;IAEA;IACA;MACA;MACA;MACA;QACA;QACA;QACA;UACA;UACAC;YACA;cACA;cACA;YACA;cACA;cACA;YACA;UACA;UAEA;QACA;MAEA;IAEA;IACA;IACA;MACA;MACA;MACA;MACA;QACAC;MACA;MACA;MACA;MACA;MACA;QACAC;MACA;MAEA;MAEA;QAEAD;UACA;YACAE;UACA;QACA;QAEAD;UACA;YACAC;UACA;QACA;QACAC;MAEA;MAEA;QAEAH;UACA;YACAE;UACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACAC;MAEA;IAEA;EAEA;EACAC;IACA;EACA;EACAnB;IAAAC;EAAA;AACA","names":["name","components","DialogAddTask","data","taskList","historyTaskList","dialogVisible","methods","openDialog","closeDialog","cancelTask","confirmButtonText","cancelButtonText","type","message","tasks","majorList","statusList","task","_this","created"],"sourceRoot":"src/components/home/admin","sources":["TaskPublish.vue"],"sourcesContent":["<template>\r\n    <el-card class=\"box-card\">\r\n        <div slot=\"header\">\r\n            <el-row>\r\n                <el-col :span=\"12\">\r\n                    <div>选题任务发布</div>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                    <div class=\"header_btn\">\r\n                        <el-button plain type=\"primary\" @click=\"openDialog\">发布选题任务</el-button>\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n            <span></span>\r\n        </div>\r\n        <div class=\"item\">\r\n            <el-table :data=\"taskList\" style=\"width: 100%;margin-bottom:30px\" height=\"311\">\r\n                <el-table-column type=\"index\" prop=\"id\" align=\"center\" width=\"70\"></el-table-column>\r\n                <el-table-column prop=\"name\" align=\"center\" label=\"当前任务名称\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"year\" align=\"center\" label=\"届数\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"major\" align=\"center\" label=\"专业\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"startTime\" align=\"center\" label=\"开始时间\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"duration\" align=\"center\" label=\"任务时长（分钟）\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"status\" align=\"center\" label=\"任务状态\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"publishBy\" align=\"center\" label=\"任务发布人\">\r\n                </el-table-column>\r\n                <el-table-column>\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button plain type=\"danger\" @click=\"cancelTask(scope.row)\">取消任务</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <el-table :data=\"historyTaskList\" style=\"width: 100%\" height=\"339\">\r\n                <el-table-column type=\"index\" align=\"center\" width=\"70\"></el-table-column>\r\n                <el-table-column prop=\"name\" align=\"center\" label=\"历史任务名称\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"year\" align=\"center\" label=\"届数\" width=\"180\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"major\" align=\"center\" label=\"专业\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"startTime\" align=\"center\" label=\"开始时间\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"duration\" align=\"center\" label=\"任务时长（分钟）\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"status\" align=\"center\" label=\"任务状态\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"publishBy\" align=\"center\" label=\"任务发布人\">\r\n                </el-table-column>\r\n            </el-table>\r\n            <DialogAddTask :visible=\"dialogVisible\" @close=\"closeDialog\"></DialogAddTask>\r\n        </div>\r\n\r\n    </el-card>\r\n</template>\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase';\r\nimport DialogAddTask from '@/components/home/admin/DialogAddTask.vue';\r\n\r\nexport default {\r\n    name: \"TaskPublish\",\r\n    components: [\r\n        DialogAddTask\r\n    ],\r\n    data() {\r\n        return {\r\n            taskList: [],\r\n            historyTaskList: [],\r\n            dialogVisible: false,\r\n        };\r\n    },\r\n    methods: {\r\n        //显示dialog\r\n        openDialog() {\r\n            this.dialogVisible = true;\r\n        },\r\n        closeDialog(val) {\r\n            this.dialogVisible = val;\r\n        },\r\n        //删除任务\r\n        cancelTask(row) {\r\n            this.$confirm(\"此操作将永久删除该任务: \" + row.name + \" , 是否继续?\", \"提示\", {\r\n                confirmButtonText: \"确定\",\r\n                cancelButtonText: \"取消\",\r\n                type: \"warning\"\r\n            }).then(() => {\r\n                //发送请求，删除row.id 对应的任务\r\n                this.$message({\r\n                    type: \"success\",\r\n                    message: \"删除成功!\"\r\n                });\r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: \"info\",\r\n                    message: \"已取消删除\"\r\n                });\r\n            });\r\n        },\r\n\r\n        //获取任务列表\r\n        async getTaskList() {\r\n            //根据jwt.id（aid）获取用户信息（的college）\r\n            const user = await this.$http.get('/userAdmin/' + jwt_prase().id)\r\n            if (user.data.code === 200) {\r\n                //根据college获取任务列表\r\n                const tasks = await this.$http.get('/task/' + user.data.data.college)\r\n                if (tasks.data.code === 200) {\r\n                    //处理数据\r\n                    tasks.data.data.forEach(task => {\r\n                        if (task.status === 0) {\r\n                            //未开始任务列表\r\n                            this.taskList.push(task)\r\n                        } else {\r\n                            //历史任务列表\r\n                            this.historyTaskList.push(task)\r\n                        }\r\n                    });\r\n\r\n                    this.setTaskList(user.data.data.college)\r\n                }\r\n\r\n            }\r\n\r\n        },\r\n        //处理task列表\r\n        async setTaskList(college) {\r\n            //获取majorList\r\n            const majorResp = await this.$http.get('/dict/major/' + college)\r\n            let majorList;\r\n            if (majorResp.data.code === 200) {\r\n                majorList = majorResp.data.data\r\n            }\r\n            //获取statusList\r\n            const statusResp = await this.$http.get('/dict/taskStatus')\r\n            let statusList \r\n            if (statusResp.data.code === 200) {\r\n                statusList = statusResp.data.data\r\n            }\r\n\r\n            const _this = this\r\n\r\n            this.taskList.forEach((task, index, arr) => {\r\n\r\n                majorList.forEach((major) => {\r\n                    if (major.majorId == task.major) {\r\n                        task.major = major.description\r\n                    }\r\n                })\r\n\r\n                statusList.forEach((status) => {\r\n                    if (status.status == task.status) {\r\n                        task.status = status.description\r\n                    }\r\n                })\r\n                _this.taskList = arr\r\n\r\n            })\r\n\r\n            this.historyTaskList.forEach((task, index, arr) => {\r\n\r\n                majorList.forEach((major) => {\r\n                    if (major.majorId == task.major) {\r\n                        task.major = major.description\r\n                    }\r\n                })\r\n\r\n                // statusList.forEach((status) => {\r\n                //     if (status.status == task.status) {\r\n                //         task.status = status.description\r\n                //     }\r\n                // })\r\n                _this.historyTaskList = arr\r\n\r\n            })\r\n\r\n        }\r\n\r\n    },\r\n    created() {\r\n        this.getTaskList()\r\n    },\r\n    components: { DialogAddTask }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n.header_btn {\r\n    float: right;\r\n}\r\n\r\n.box-card {\r\n    text-align: left;\r\n    line-height: 24px;\r\n    font-size: 18px;\r\n    height: 818px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}