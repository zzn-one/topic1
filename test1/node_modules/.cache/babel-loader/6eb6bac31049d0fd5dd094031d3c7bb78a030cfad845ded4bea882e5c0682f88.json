{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport jwt_prase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"StudentTopic\",\n  components: {},\n  methods: {\n    async getStudentMsg() {\n      let sId = jwt_prase().id;\n      const _this = this;\n      //根据sid去获取topic\n      this.$http.get(\"/topic/selected/\" + sId).then(topicResp => {\n        console.log(topicResp);\n        if (topicResp.data.code === 200 && topicResp.data.data !== null) {\n          const topic = topicResp.data.data;\n          _this.valueList[0] = topic.topicName;\n          _this.valueList[1] = topic.dictTopicType.description;\n          _this.valueList[2] = topic.dictTopicSource.description;\n          let tId = topicResp.data.data.createdBy;\n          _this.$http.get(\"/userTutor/\" + tId).then(resp => {\n            if (resp.data.code === 200 && resp.data.data !== null) {\n              const tutor = resp.data.data;\n              //根据tId去获取 指导老师信息\n              _this.valueList[3] = tutor.tutorName;\n              _this.valueList[4] = tutor.dictTutorTitle.description;\n              _this.valueList[5] = tutor.phone;\n              _this.valueList[6] = tutor.email;\n              _this.valueList[7] = tutor.office;\n              _this.$forceUpdate();\n            }\n          });\n        } else {\n          for (let i = 0; i < 8; i++) {\n            _this.valueList.push(\"你尚未选择课题\");\n          }\n        }\n      });\n    }\n  },\n  data() {\n    const LabelList = [\"课题名称\", \"课题类型\", \"课题来源\", \"指导老师\", \"指导老师职称\", \"指导老师手机号\", \"指导老师邮箱\", \"指导老师办公室\"];\n    return {\n      labelList: LabelList,\n      valueList: []\n    };\n  },\n  created() {\n    //根据sId获取课题信息,再根据课题信息中的tId获取导师信息\n    this.getStudentMsg();\n  }\n};","map":{"version":3,"mappings":";AAiBA;AAEA;EACAA;EACAC,aAEA;EACAC;IACA;MACA;MACA;MACA;MACA;QAEAC;QAEA;UACA;UACAC;UACAA;UACAA;UAEA;UACAA;YACA;cACA;cACA;cACAA;cACAA;cACAA;cACAA;cACAA;cACAA;YAEA;UAEA;QAEA;UACA;YACAA;UACA;QAEA;MACA;IACA;EACA;EACAC;IACA,2BACA,QACA,QACA,QACA,UACA,WACA,UACA,UACA;IAEA;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;EAEA;AAEA","names":["name","components","methods","console","_this","data","labelList","valueList","created"],"sourceRoot":"src/components/home/student","sources":["StudentTopic.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-descriptions class=\"margin-top\" title=\"我的毕业设计课题\" :column=\"1\" border>\r\n            <template v-for=\"label, index  in labelList \">\r\n                <el-descriptions-item>\r\n                    <template slot=\"label\">\r\n                        <i class=\"el-icon-s-data\"></i>\r\n                        {{ label }}\r\n                    </template>\r\n                    {{ valueList[index] }}\r\n                </el-descriptions-item>\r\n            </template>\r\n        </el-descriptions>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase'\r\n\r\nexport default {\r\n    name: \"StudentTopic\",\r\n    components: {\r\n\r\n    },\r\n    methods: {\r\n        async getStudentMsg() {\r\n            let sId = jwt_prase().id\r\n            const _this = this\r\n            //根据sid去获取topic\r\n            this.$http.get(\"/topic/selected/\" + sId).then((topicResp) => {\r\n\r\n                console.log(topicResp);\r\n\r\n                if (topicResp.data.code === 200 && topicResp.data.data !== null) {\r\n                    const topic = topicResp.data.data\r\n                    _this.valueList[0] = topic.topicName\r\n                    _this.valueList[1] = topic.dictTopicType.description\r\n                    _this.valueList[2] = topic.dictTopicSource.description\r\n\r\n                    let tId = topicResp.data.data.createdBy\r\n                    _this.$http.get(\"/userTutor/\" + tId).then((resp) => {\r\n                        if (resp.data.code === 200 && resp.data.data !== null) {\r\n                            const tutor = resp.data.data\r\n                            //根据tId去获取 指导老师信息\r\n                            _this.valueList[3] = tutor.tutorName\r\n                            _this.valueList[4] = tutor.dictTutorTitle.description\r\n                            _this.valueList[5] = tutor.phone\r\n                            _this.valueList[6] = tutor.email\r\n                            _this.valueList[7] = tutor.office\r\n                            _this.$forceUpdate()\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n                } else {\r\n                    for (let i = 0; i < 8; i++) {\r\n                        _this.valueList.push(\"你尚未选择课题\")\r\n                    }\r\n\r\n                }\r\n            })\r\n        },\r\n    },\r\n    data() {\r\n        const LabelList = [\"课题名称\",\r\n            \"课题类型\",\r\n            \"课题来源\",\r\n            \"指导老师\",\r\n            \"指导老师职称\",\r\n            \"指导老师手机号\",\r\n            \"指导老师邮箱\",\r\n            \"指导老师办公室\"\r\n        ]\r\n\r\n        return {\r\n            labelList: LabelList,\r\n            valueList: []\r\n        }\r\n    },\r\n    created() {\r\n        //根据sId获取课题信息,再根据课题信息中的tId获取导师信息\r\n        this.getStudentMsg()\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n/deep/.el-descriptions__header {\r\n    line-height: 100px;\r\n}\r\n\r\n.main {\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n/deep/.el-descriptions__body .el-descriptions__table {\r\n    height: 700px;\r\n\r\n}\r\n\r\n/deep/.el-descriptions__body {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\n/deep/.el-descriptions {\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-descriptions__title {\r\n    font-size: 24px;\r\n}\r\n\r\n/deep/.el-descriptions-item__label.is-bordered-label {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    color: black;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}