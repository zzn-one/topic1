{"ast":null,"code":"export default {\n  name: \"LoginForm\",\n  data() {\n    var checkAge = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('年龄不能为空'));\n      }\n      setTimeout(() => {\n        if (!Number.isInteger(value)) {\n          callback(new Error('请输入数字值'));\n        } else {\n          if (value < 18) {\n            callback(new Error('必须年满18岁'));\n          } else {\n            callback();\n          }\n        }\n      }, 1000);\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        pass: '',\n        checkPass: '',\n        age: ''\n      },\n      rules: {\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        age: [{\n          validator: checkAge,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"AAkBA;EACAA;EACAC;IACA;MACA;QACA;MACA;MACAC;QACA;UACAC;QACA;UACA;YACAA;UACA;YACAA;UACA;QACA;MACA;IACA;IACA;MACA;QACAA;MACA;QACA;UACA;QACA;QACAA;MACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAH,OACA;UAAAI;UAAAC;QAAA,EACA;QACAJ,YACA;UAAAG;UAAAC;QAAA,EACA;QACAH,MACA;UAAAE;UAAAC;QAAA;MAEA;IACA;EACA;EACAC;IACAC;MACA;QACA;UACAC;QACA;UACAC;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","setTimeout","callback","ruleForm","pass","checkPass","age","rules","validator","trigger","methods","submitForm","alert","console","resetForm"],"sourceRoot":"src/components/login","sources":["LoginForm.vue"],"sourcesContent":["<template>\r\n    <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"年龄\" prop=\"age\">\r\n          <el-input v-model.number=\"ruleForm.age\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n</template>\r\n<script>\r\n  export default {\r\n    name:\"LoginForm\",\r\n    data() {\r\n      var checkAge = (rule, value, callback) => {\r\n        if (!value) {\r\n          return callback(new Error('年龄不能为空'));\r\n        }\r\n        setTimeout(() => {\r\n          if (!Number.isInteger(value)) {\r\n            callback(new Error('请输入数字值'));\r\n          } else {\r\n            if (value < 18) {\r\n              callback(new Error('必须年满18岁'));\r\n            } else {\r\n              callback();\r\n            }\r\n          }\r\n        }, 1000);\r\n      };\r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请输入密码'));\r\n        } else {\r\n          if (this.ruleForm.checkPass !== '') {\r\n            this.$refs.ruleForm.validateField('checkPass');\r\n          }\r\n          callback();\r\n        }\r\n      };\r\n      var validatePass2 = (rule, value, callback) => {\r\n        if (value === '') {\r\n          callback(new Error('请再次输入密码'));\r\n        } else if (value !== this.ruleForm.pass) {\r\n          callback(new Error('两次输入密码不一致!'));\r\n        } else {\r\n          callback();\r\n        }\r\n      };\r\n      return {\r\n        ruleForm: {\r\n          pass: '',\r\n          checkPass: '',\r\n          age: ''\r\n        },\r\n        rules: {\r\n          pass: [\r\n            { validator: validatePass, trigger: 'blur' }\r\n          ],\r\n          checkPass: [\r\n            { validator: validatePass2, trigger: 'blur' }\r\n          ],\r\n          age: [\r\n            { validator: checkAge, trigger: 'blur' }\r\n          ]\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            alert('submit!');\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    }\r\n  }\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}