{"ast":null,"code":"import jwt_prase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"TopicDisplay\",\n  methods: {\n    // 分页的pageSize\n    handleSizeChange(val) {\n      this.pageSize = val;\n    },\n    // 分页的currentPage\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    indexInit(index) {\n      return index + (this.currentPage - 1) * this.pageSize + 1;\n    },\n    filterMethodTopicType(value, row) {\n      return row.dictTopicType.description === value;\n    },\n    filterMethodTopicSource(value, row) {\n      return row.dictTopicSource.description === value;\n    },\n    filterMethodTopicPassed(value, row) {\n      return row.dictTopicPassed.description === value;\n    },\n    //根据college 毕设课题列表\n    async getTopicList() {\n      let college = jwt_prase().college;\n      let year = localStorage.getItem(\"year\");\n      const topicResp = await this.$http.get(\"/topic/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + college + \"/\" + year);\n      if (topicResp.data.code === 200) {\n        console.log(topicResp.data);\n        //分页\n        this.total = topicResp.data.data.total;\n        this.topicList = topicResp.data.data.records;\n        this.praseTopicList(this.topicList);\n      }\n    },\n    //数据处理\n    async praseTopicList(topiclist) {\n      const _this = this;\n      topiclist.forEach((topic, index, arr) => {\n        //处理时间数据\n        topic.createdTime = new Date(topic.createdTime).toLocaleString();\n\n        //处理审核状态\n        if (topic.checked === 1) {\n          //未审核\n          topic.dictTopicPassed.description = \"未审核\";\n        } else {\n          //解析审核时间\n          topic.checkedTime = new Date(topic.checkedTime).toLocaleString();\n        }\n        topiclist = arr;\n      });\n    }\n  },\n  data() {\n    return {\n      filterTopicPassed: [{\n        text: \"不及格\",\n        value: \"不及格\"\n      }, {\n        text: \"基本及格\",\n        value: \"基本及格\"\n      }, {\n        text: \"及格\",\n        value: \"及格\"\n      }, {\n        text: \"未审核\",\n        value: \"未审核\"\n      }],\n      filterTopicSource: [{\n        text: \"自命题\",\n        value: \"自命题\"\n      }, {\n        text: \"企业\",\n        value: \"企业\"\n      }, {\n        text: \"教师科研\",\n        value: \"教师科研\"\n      }],\n      filterTopicType: [{\n        text: \"论文\",\n        value: \"论文\"\n      }, {\n        text: \"设计\",\n        value: \"设计\"\n      }],\n      filterMajor: [],\n      topicList: [],\n      // 分页\n      total: 100,\n      currentPage: 1,\n      pageSize: 10,\n      pageSizeList: [5, 10, 15, 20]\n    };\n  },\n  async created() {\n    //发送请求获取topicList\n    this.getTopicList();\n  },\n  watch: {\n    pageSize() {\n      this.getTopicList();\n    },\n    currentPage() {\n      this.getTopicList();\n    }\n  }\n};","map":{"version":3,"mappings":"AA8CA;AAEA;EACAA;EACAC;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IAEA;IACA;MACA;MACA;MACA;MAEA;QACAC;QACA;QACA;QAEA;QACA;MACA;IACA;IAEA;IACA;MACA;MACAC;QAEA;QACAC;;QAEA;QACA;UACA;UACAA;QACA;UACA;UACAA;QACA;QAEAD;MACA;IACA;EACA;EACAE;IACA;MACAC,oBACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAC,oBACA;QACAF;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAE,kBACA;QACAH;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAG;MACAC;MAEA;MACAC;MACAC;MACAC;MACAC;IAEA;EAEA;EACA;IAEA;IACA;EACA;EACAC;IACAF;MACA;IACA;IACAD;MACA;IACA;EACA;AACA","names":["name","methods","handleSizeChange","handleCurrentChange","indexInit","filterMethodTopicType","filterMethodTopicSource","filterMethodTopicPassed","console","topiclist","topic","data","filterTopicPassed","text","value","filterTopicSource","filterTopicType","filterMajor","topicList","total","currentPage","pageSize","pageSizeList","watch"],"sourceRoot":"src/components/home/admin","sources":["TopicDisplay.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"box-card\">\r\n            <div slot=\"header\" class=\"card_header\">\r\n                <span>课题信息</span>\r\n            </div>\r\n            <div class=\"item\">\r\n                <el-table height=\"712\" empty-text=\"暂无数据\" :data=\"topicList\" scripe border style=\"width: 100%\">\r\n                    <el-table-column type=\"index\" :index=\"indexInit\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"topicName\" label=\"课题名称\" min-width=\"350px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"createdName\" label=\"导师名称\" min-width=\"120px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"dictMajor.description\" label=\"专业\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicType\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicType\" prop=\"dictTopicType.description\" label=\"课题类别\" min-width=\"110px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicSource\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicSource\" prop=\"dictTopicSource.description\" label=\"课题来源\" min-width=\"110px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicPassed\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicPassed\" prop=\"dictTopicPassed.description\" label=\"审核结果\" min-width=\"110px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkSuggestions\" label=\"修改建议\" min-width=\"190px\" width=\"190px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkedName\" label=\"审核员名称\" min-width=\"120px\">\r\n                    </el-table-column>\r\n\r\n                    <el-table-column prop=\"createdTime\" label=\"提交时间\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkedTime\" label=\"审核时间\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <!-- 分页 -->\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"currentPage\" :page-sizes=\"pageSizeList\" :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase'\r\n\r\nexport default {\r\n    name: \"TopicDisplay\",\r\n    methods: {\r\n        // 分页的pageSize\r\n        handleSizeChange(val) {\r\n            this.pageSize = val\r\n        },\r\n        // 分页的currentPage\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val\r\n        },\r\n        indexInit(index) {\r\n            return index + (this.currentPage - 1) * this.pageSize + 1\r\n        },\r\n        filterMethodTopicType(value, row) {\r\n            return row.dictTopicType.description === value\r\n        },\r\n        filterMethodTopicSource(value, row) {\r\n            return row.dictTopicSource.description === value\r\n        },\r\n        filterMethodTopicPassed(value, row) {\r\n            return row.dictTopicPassed.description === value\r\n        },\r\n\r\n        //根据college 毕设课题列表\r\n        async getTopicList() {\r\n            let college = jwt_prase().college\r\n            let year = localStorage.getItem(\"year\")\r\n            const topicResp = await this.$http.get(\"/topic/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + college + \"/\" + year)\r\n\r\n            if (topicResp.data.code === 200) {\r\n                console.log(topicResp.data);\r\n                //分页\r\n                this.total = topicResp.data.data.total\r\n\r\n                this.topicList = topicResp.data.data.records\r\n                this.praseTopicList(this.topicList)\r\n            }\r\n        },\r\n\r\n        //数据处理\r\n        async praseTopicList(topiclist) {\r\n            const _this = this\r\n            topiclist.forEach((topic, index, arr) => {\r\n\r\n                //处理时间数据\r\n                topic.createdTime = new Date(topic.createdTime).toLocaleString()\r\n\r\n                //处理审核状态\r\n                if (topic.checked === 1) {\r\n                    //未审核\r\n                    topic.dictTopicPassed.description = \"未审核\"\r\n                } else {\r\n                    //解析审核时间\r\n                    topic.checkedTime = new Date(topic.checkedTime).toLocaleString()\r\n                }\r\n\r\n                topiclist = arr\r\n            });\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            filterTopicPassed: [\r\n                {\r\n                    text: \"不及格\",\r\n                    value: \"不及格\"\r\n                },\r\n                {\r\n                    text: \"基本及格\",\r\n                    value: \"基本及格\"\r\n                },\r\n                {\r\n                    text: \"及格\",\r\n                    value: \"及格\"\r\n                },\r\n                {\r\n                    text: \"未审核\",\r\n                    value: \"未审核\"\r\n                }\r\n            ],\r\n            filterTopicSource: [\r\n                {\r\n                    text: \"自命题\",\r\n                    value: \"自命题\"\r\n                },\r\n                {\r\n                    text: \"企业\",\r\n                    value: \"企业\"\r\n                },\r\n                {\r\n                    text: \"教师科研\",\r\n                    value: \"教师科研\"\r\n                },\r\n            ],\r\n            filterTopicType: [\r\n                {\r\n                    text: \"论文\",\r\n                    value: \"论文\"\r\n                },\r\n                {\r\n                    text: \"设计\",\r\n                    value: \"设计\"\r\n                },\r\n            ],\r\n            filterMajor: [],\r\n            topicList: [],\r\n\r\n            // 分页\r\n            total: 100,\r\n            currentPage: 1,\r\n            pageSize: 10,\r\n            pageSizeList: [5, 10, 15, 20]\r\n\r\n        }\r\n\r\n    },\r\n    async created() {\r\n\r\n        //发送请求获取topicList\r\n        this.getTopicList()\r\n    },\r\n    watch: {\r\n        pageSize() {\r\n            this.getTopicList()\r\n        },\r\n        currentPage() {\r\n            this.getTopicList()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.box-card {\r\n    height: 818px;\r\n    line-height: 23px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.card_header {\r\n    text-align: left;\r\n    font-size: 20px;\r\n}\r\n\r\n.el-table {\r\n    text-align: center;\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-table__row {\r\n    height: 66px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}