{"ast":null,"code":"import jwt_prase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"TopicCheck\",\n  methods: {\n    //下一个课题按钮\n    nextTopic(scope) {},\n    checkSubmit() {\n      //提交课题审核\n      console.log(\"提交课题审核\");\n    },\n    //展示毕设课题审核页面\n    showCheckFormDialog(scope) {\n      let rowData = scope.row;\n      this.checkForm.topicName = rowData.topicName;\n      this.checkForm.id = rowData.id;\n      this.checkFormDialogVisible = true;\n    },\n    //关闭审核页面\n    closeCheckForm() {\n      this.checkFormDialogVisible = false;\n    },\n    // 分页的pageSize\n    handleSizeChange(val) {\n      this.pageSize = val;\n    },\n    // 分页的currentPage\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    filterMethodTopicType(value, row) {\n      return row.topicType === value;\n    },\n    filterMethodTopicSource(value, row) {\n      return row.topicSource === value;\n    },\n    //发送请求获取passedList\n    async getpassedList() {\n      const resp = await this.$http.get('/dict/topicPassed');\n      if (resp.data.code === 200) {\n        this.passedList = resp.data.data;\n      }\n    },\n    //发送请求，根据管理员用户id获取college  \n    async getCollege() {\n      const resp = await this.$http.get(\"/userAdmin/\" + jwt_prase().id);\n      if (resp.data.code === 200) {\n        this.college = resp.data.data.college;\n      }\n    },\n    //根据college 毕设课题列表\n    async getTopicList() {\n      const topicResp = await this.$http.get(\"/topic/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + this.college);\n      if (topicResp.data.code === 200) {\n        //分页\n        this.total = topicResp.data.data.total;\n        this.topicList = topicResp.data.data.records;\n        this.praseTopicList(this.topicList);\n      }\n    },\n    //获取typeList\n    async getTypeList() {\n      //获取typeList\n      const typeResp = await this.$http.get(\"/dict/topicType\");\n      if (typeResp.data.code === 200) {\n        this.typeList = typeResp.data.data;\n      }\n    },\n    //获取sourceList\n    async getSourceList() {\n      const sourceResp = await this.$http.get(\"/dict/topicSource\");\n      if (sourceResp.data.code === 200) {\n        this.sourceList = sourceResp.data.data;\n      }\n    },\n    indexInit(index) {\n      return index + (this.currentPage - 1) * this.pageSize + 1;\n    },\n    //获取majorList\n    async getMajorList() {\n      const majorResp = await this.$http.get(\"/dict/major/\" + this.college);\n      if (majorResp.data.code === 200) {\n        this.majorList = majorResp.data.data;\n      }\n    },\n    //数据处理\n    async praseTopicList(topiclist) {\n      const _this = this;\n      topiclist.forEach((topic, index, arr) => {\n        //发送请求，获取 导师 信息\n        this.$http.get(\"/userTutor/\" + topic.createdBy).then(resp => {\n          if (resp.data.code === 200) {\n            topic.createdBy = resp.data.data.tutorName;\n          }\n        });\n\n        //处理时间数据\n        topic.createdTime = new Date(topic.createdTime).toLocaleString();\n\n        //处理type\n        _this.typeList.forEach(item => {\n          if (topic.type === item.type) {\n            topic.type = item.description;\n          }\n        });\n        //处理source\n        _this.sourceList.forEach(item => {\n          if (topic.source === item.source) {\n            topic.source = item.description;\n          }\n        });\n        //处理passed\n        _this.passedList.forEach(item => {\n          if (topic.passed === item.passId) {\n            topic.passed = item.description;\n          }\n        });\n        //处理major\n        _this.majorList.forEach(item => {\n          if (topic.major === item.majorId) {\n            topic.major = item.description;\n          }\n        });\n        topiclist = arr;\n      });\n    }\n  },\n  data() {\n    return {\n      checkForm: {\n        id: '',\n        topicName: \"\",\n        passed: '',\n        suggestions: \"\"\n      },\n      passedList: [],\n      topicList: [],\n      checkFormDialogVisible: false,\n      college: '',\n      typeList: [],\n      sourceList: [],\n      passedList: [],\n      majorList: [],\n      filterTopicSource: [{\n        text: \"自命题\",\n        value: \"自命题\"\n      }, {\n        text: \"企业\",\n        value: \"企业\"\n      }, {\n        text: \"教师科研\",\n        value: \"教师科研\"\n      }],\n      filterTopicType: [{\n        text: \"论文\",\n        value: \"论文\"\n      }, {\n        text: \"设计\",\n        value: \"设计\"\n      }],\n      // 分页\n      total: 100,\n      currentPage: 1,\n      pageSize: 5,\n      pageSizeList: [5, 10, 15, 20]\n    };\n  },\n  async created() {\n    //发送请求获取passedList\n    await this.getpassedList();\n    await this.getCollege();\n    await this.getMajorList();\n    await this.getSourceList();\n    await this.getTypeList();\n\n    //发送请求获取topicList\n    this.getTopicList();\n  },\n  watch: {\n    pageSize() {\n      this.getTopicList();\n    },\n    currentPage() {\n      this.getTopicList();\n    }\n  }\n};","map":{"version":3,"mappings":"AAmEA;AACA;EACAA;EACAC;IACA;IACAC,kBAEA;IAEAC;MACA;MACAC;IACA;IACA;IACAC;MACA;MAEA;MACA;MAEA;IACA;IAEA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MAEA;MAEA;QACA;MACA;IAEA;IACA;IACA;MACA;MAEA;QACA;QACA;QAEA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IAEA;IACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACAC;QAEA;QACA,gDACAC;UACA;YACAC;UACA;QACA;;QAEA;QACAA;;QAEA;QACAC;UACA;YACAD;UACA;QACA;QACA;QACAC;UACA;YACAD;UACA;QACA;QACA;QACAC;UACA;YACAD;UACA;QACA;QACA;QACAC;UACA;YACAD;UACA;QACA;QAEAF;MACA;IACA;EAEA;EACAI;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAL;MACAM;MACAC,oBACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAC,kBACA;QACAF;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MAEA;MACAE;MACAC;MACAC;MACAC;IACA;EAEA;EACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;EAGA;EACAC;IACAF;MACA;IACA;IACAD;MACA;IACA;EACA;AACA","names":["name","methods","nextTopic","checkSubmit","console","showCheckFormDialog","closeCheckForm","handleSizeChange","handleCurrentChange","filterMethodTopicType","filterMethodTopicSource","indexInit","topiclist","then","topic","_this","data","checkForm","id","topicName","passed","suggestions","passedList","topicList","checkFormDialogVisible","college","typeList","sourceList","majorList","filterTopicSource","text","value","filterTopicType","total","currentPage","pageSize","pageSizeList","watch"],"sourceRoot":"src/components/home/admin","sources":["TopicCheck.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"box-card\">\r\n            <div slot=\"header\" class=\"card_header\">\r\n                <span>尚未审核的课题</span>\r\n            </div>\r\n            <div class=\"item\">\r\n                <el-table height=\"712\" empty-text=\"暂无数据\" :data=\"topicList\" scripe border style=\"width: 100%\">\r\n                    <el-table-column fixed type=\"index\" prop=\"id\" :index=\"indexInit\">\r\n                    </el-table-column>\r\n                    <el-table-column fixed prop=\"topicName\" label=\"课题名称\" min-width=\"350px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicType\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicType\" prop=\"type\" label=\"课题类别\" min-width=\"120px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicSource\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicSource\" prop=\"source\" label=\"课题来源\" min-width=\"120px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"createdBy\" label=\"提交人名称\" min-width=\"120px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"major\" label=\"专业名称\" min-width=\"120px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"createdTime\" label=\"提交时间\" min-width=\"200px\" width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column min-width=\"100px\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button class=\"btn_check\" plain type=\"success\" @click=\"showCheckFormDialog(scope)\">审核\r\n                            </el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <!-- 分页 -->\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"currentPage\" :page-sizes=\"pageSizeList\" :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </el-card>\r\n\r\n        <el-dialog title=\"课题审核详情页\" :visible.sync=\"checkFormDialogVisible\" width=\"600px\">\r\n            <div>\r\n                <el-form label-position=\"top\" :model=\"checkForm\">\r\n                    <el-form-item label=\"课题名称\">\r\n                        <el-input disabled v-model=\"checkForm.topicName\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否及格\">\r\n                        <el-select v-model=\"checkForm.passed\" placeholder=\"是否及格\">\r\n                            <el-option v-for=\"item in passedList\" :label=\"item.description\" :value=\"item.passId\"\r\n                                :key=\"item.passId\"></el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"修改建议\">\r\n                        <el-input type=\"textarea\" v-model=\"checkForm.suggestions\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-row class=\"btn_checkForm_div\">\r\n                            <el-button plain type=\"success\" @click=\"checkSubmit\">确认审核</el-button>\r\n                            <el-button plain type=\"warning\" @click=\"nextTopic\">下一个课题</el-button>\r\n                            <el-button plain type=\"danger\" @click=\"closeCheckForm\">关闭页面</el-button>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase';\r\nexport default {\r\n    name: \"TopicCheck\",\r\n    methods: {\r\n        //下一个课题按钮\r\n        nextTopic(scope) {\r\n\r\n        },\r\n\r\n        checkSubmit() {\r\n            //提交课题审核\r\n            console.log(\"提交课题审核\");\r\n        },\r\n        //展示毕设课题审核页面\r\n        showCheckFormDialog(scope) {\r\n            let rowData = scope.row\r\n\r\n            this.checkForm.topicName = rowData.topicName\r\n            this.checkForm.id = rowData.id\r\n\r\n            this.checkFormDialogVisible = true\r\n        },\r\n\r\n        //关闭审核页面\r\n        closeCheckForm() {\r\n            this.checkFormDialogVisible = false\r\n        },\r\n        // 分页的pageSize\r\n        handleSizeChange(val) {\r\n            this.pageSize = val\r\n        },\r\n        // 分页的currentPage\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val\r\n        },\r\n\r\n        filterMethodTopicType(value, row) {\r\n            return row.topicType === value\r\n        },\r\n        filterMethodTopicSource(value, row) {\r\n            return row.topicSource === value\r\n        },\r\n        //发送请求获取passedList\r\n        async getpassedList() {\r\n            const resp = await this.$http.get('/dict/topicPassed')\r\n            if (resp.data.code === 200) {\r\n                this.passedList = resp.data.data\r\n            }\r\n        },\r\n        //发送请求，根据管理员用户id获取college  \r\n        async getCollege() {\r\n\r\n            const resp = await this.$http.get(\"/userAdmin/\" + jwt_prase().id)\r\n\r\n            if (resp.data.code === 200) {\r\n                this.college = resp.data.data.college\r\n            }\r\n\r\n        },\r\n        //根据college 毕设课题列表\r\n        async getTopicList() {\r\n            const topicResp = await this.$http.get(\"/topic/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + this.college)\r\n\r\n            if (topicResp.data.code === 200) {\r\n                //分页\r\n                this.total = topicResp.data.data.total\r\n\r\n                this.topicList = topicResp.data.data.records\r\n                this.praseTopicList(this.topicList)\r\n            }\r\n        },\r\n        //获取typeList\r\n        async getTypeList() {\r\n            //获取typeList\r\n            const typeResp = await this.$http.get(\"/dict/topicType\")\r\n            if (typeResp.data.code === 200) {\r\n                this.typeList = typeResp.data.data\r\n            }\r\n        },\r\n        //获取sourceList\r\n        async getSourceList() {\r\n            const sourceResp = await this.$http.get(\"/dict/topicSource\")\r\n            if (sourceResp.data.code === 200) {\r\n                this.sourceList = sourceResp.data.data\r\n            }\r\n        },\r\n        indexInit(index) {\r\n            return index + (this.currentPage - 1) * this.pageSize + 1\r\n        },\r\n\r\n        //获取majorList\r\n        async getMajorList() {\r\n            const majorResp = await this.$http.get(\"/dict/major/\" + this.college)\r\n            if (majorResp.data.code === 200) {\r\n                this.majorList = majorResp.data.data\r\n            }\r\n        },\r\n        //数据处理\r\n        async praseTopicList(topiclist) {\r\n            const _this = this\r\n            topiclist.forEach((topic, index, arr) => {\r\n\r\n                //发送请求，获取 导师 信息\r\n                this.$http.get(\"/userTutor/\" + topic.createdBy)\r\n                    .then(resp => {\r\n                        if (resp.data.code === 200) {\r\n                            topic.createdBy = resp.data.data.tutorName\r\n                        }\r\n                    })\r\n\r\n                //处理时间数据\r\n                topic.createdTime = new Date(topic.createdTime).toLocaleString()\r\n\r\n                //处理type\r\n                _this.typeList.forEach((item => {\r\n                    if (topic.type === item.type) {\r\n                        topic.type = item.description\r\n                    }\r\n                }))\r\n                //处理source\r\n                _this.sourceList.forEach((item => {\r\n                    if (topic.source === item.source) {\r\n                        topic.source = item.description\r\n                    }\r\n                }))\r\n                //处理passed\r\n                _this.passedList.forEach((item => {\r\n                    if (topic.passed === item.passId) {\r\n                        topic.passed = item.description\r\n                    }\r\n                }))\r\n                //处理major\r\n                _this.majorList.forEach((item) => {\r\n                    if (topic.major === item.majorId) {\r\n                        topic.major = item.description\r\n                    }\r\n                })\r\n\r\n                topiclist = arr\r\n            });\r\n        }\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            checkForm: {\r\n                id: '',\r\n                topicName: \"\",\r\n                passed: '',\r\n                suggestions: \"\"\r\n            },\r\n            passedList: [],\r\n            topicList: [],\r\n            checkFormDialogVisible: false,\r\n            college: '',\r\n            typeList: [],\r\n            sourceList: [],\r\n            passedList: [],\r\n            majorList: [],\r\n            filterTopicSource: [\r\n                {\r\n                    text: \"自命题\",\r\n                    value: \"自命题\"\r\n                },\r\n                {\r\n                    text: \"企业\",\r\n                    value: \"企业\"\r\n                },\r\n                {\r\n                    text: \"教师科研\",\r\n                    value: \"教师科研\"\r\n                },\r\n            ],\r\n            filterTopicType: [\r\n                {\r\n                    text: \"论文\",\r\n                    value: \"论文\"\r\n                },\r\n                {\r\n                    text: \"设计\",\r\n                    value: \"设计\"\r\n                },\r\n            ],\r\n\r\n            // 分页\r\n            total: 100,\r\n            currentPage: 1,\r\n            pageSize: 5,\r\n            pageSizeList: [5, 10, 15, 20]\r\n        }\r\n\r\n    },\r\n    async created() {\r\n        //发送请求获取passedList\r\n        await this.getpassedList()\r\n        await this.getCollege()\r\n        await this.getMajorList()\r\n        await this.getSourceList()\r\n        await this.getTypeList()\r\n\r\n        //发送请求获取topicList\r\n        this.getTopicList()\r\n\r\n\r\n    },\r\n    watch: {\r\n        pageSize() {\r\n            this.getTopicList()\r\n        },\r\n        currentPage() {\r\n            this.getTopicList()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.btn_checkForm_div {\r\n    text-align: center;\r\n}\r\n\r\n/deep/.el-form-item {\r\n    text-align: left;\r\n    font-size: 18px;\r\n    line-height: 23px;\r\n}\r\n\r\n/deep/.el-dialog__header {\r\n    line-height: 23px;\r\n}\r\n\r\n/deep/.el-form-item__label {\r\n    font-size: 18px;\r\n}\r\n\r\n.btn_check {\r\n    width: 100px;\r\n    font-size: 18px;\r\n}\r\n\r\n.box-card {\r\n    height: 818px;\r\n    line-height: 23px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.card_header {\r\n    text-align: left;\r\n    font-size: 20px;\r\n}\r\n\r\n.el-table {\r\n    text-align: center;\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-table__row {\r\n    height: 66px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}