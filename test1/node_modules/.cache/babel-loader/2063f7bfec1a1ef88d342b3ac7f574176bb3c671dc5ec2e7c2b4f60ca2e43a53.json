{"ast":null,"code":"export default {\n  name: \"NewTopic\",\n  emits: ['close'],\n  data() {\n    var validateTopicName = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入课题名称'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      newTopicForm: {\n        topicName: '',\n        topicType: '',\n        topicSource: ''\n      },\n      typeList: [],\n      sourceList: [],\n      rules: {\n        \"topicName\": [{\n          required: true,\n          validator: validateTopicName,\n          trigger: 'blur'\n        }],\n        \"topicType\": [{\n          required: true,\n          message: '请选择课题类型',\n          trigger: 'change'\n        }],\n        \"topicSource\": [{\n          required: true,\n          message: '请选择课题来源',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      const _this = this;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //验证通过\n          alert('submit!');\n          this.resetForm(formName);\n        } else {\n          return false;\n        }\n      });\n    },\n    nextTopic(formName) {\n      const _this = this;\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //验证通过\n          alert('submit!');\n          this.resetForm(formName);\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    closeDialog() {\n      this.$emit('close', false);\n    },\n    //发送请求获取typeList\n    async getTypeList() {\n      const resp = await this.$http.get('/dictTopicType');\n      if (resp.data.code === 200) {\n        this.typeList = resp.data.data;\n      }\n    },\n    //发送请求获取sourceList\n    async getSourceList() {\n      const resp = await this.$http.get('/dictTopicSource');\n      if (resp.data.code === 200) {\n        this.sourceList = resp.data.data;\n      }\n    }\n  },\n  created() {\n    //发送请求获取typeList\n    this.getTypeList();\n    //发送请求获取sourceList\n    this.getSourceList();\n  }\n};","map":{"version":3,"mappings":"AAiCA;EACAA;EACAC;EACAC;IACA;MACA;QACAC;MACA;QACAA;MACA;IACA;IACA;MACAC,cACA;QACAC;QACAC;QACAC;MACA;MAEAC;MACAC;MAEAC;QACA,cACA;UAAAC;UAAAC;UAAAC;QAAA,EACA;QACA,cACA;UAAAF;UAAAG;UAAAD;QAAA,EACA;QACA,gBACA;UAAAF;UAAAG;UAAAD;QAAA;MAEA;IAEA;EACA;EACAE;IACAC;MACA;MACA;QACA;UAAA;UACAC;UACA;QAEA;UACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;UAAA;UACAD;UACA;QACA;UACA;QACA;MACA;IACA;IACAE;MACA;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;EAEA;EACAC;IACA;IACA;IACA;IACA;EAEA;AAGA","names":["name","emits","data","callback","newTopicForm","topicName","topicType","topicSource","typeList","sourceList","rules","required","validator","trigger","message","methods","submitForm","alert","nextTopic","resetForm","closeDialog","created"],"sourceRoot":"src/components/home/tutor","sources":["NewTopic.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-row class=\"header_main\">\r\n            <div class=\"title_div\">毕业课题提交表</div>\r\n        </el-row>\r\n        <!-- 新增毕业课题 -->\r\n        <el-form :inline=\"true\" ref=\"newTopicForm\" :rules=\"rules\" :model=\"newTopicForm\" class=\"form_main\">\r\n\r\n            <el-form-item label=\"课题名称\" prop=\"topicName\">\r\n                <el-input v-model=\"newTopicForm.topicName\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"课题类型\" prop=\"topicType\">\r\n                <el-select v-model=\"newTopicForm.topicType\">\r\n                    <el-option v-for=\"item in typeList\" :label=\"item.description\" :value=\"item.type\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"课题来源\" prop=\"topicSource\">\r\n                <el-select v-model=\"newTopicForm.topicSource\">\r\n                    <el-option v-for=\"item in sourceList\" :label=\"item.description\" :value=\"item.source\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n        </el-form>\r\n        <el-row>\r\n            <el-button plain type=\"primary\" class=\"btn\" @click=\"submitForm('newTopicForm')\">提交,编辑下一个课题</el-button>\r\n            <el-button plain type=\"danger\" class=\"btn\" @click=\"resetForm('newTopicForm')\">重新输入</el-button>\r\n            <el-button plain type=\"success\" class=\"btn\" @click=\"submitForm('newTopicForm')\">提交,关闭页面</el-button>\r\n        </el-row>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"NewTopic\",\r\n    emits:['close'],\r\n    data() {\r\n        var validateTopicName = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入课题名称'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            newTopicForm:\r\n            {\r\n                topicName: '',\r\n                topicType: '',\r\n                topicSource: ''\r\n            },\r\n\r\n            typeList: [],\r\n            sourceList: [],\r\n\r\n            rules: {\r\n                \"topicName\": [\r\n                    { required: true, validator: validateTopicName, trigger: 'blur' }\r\n                ],\r\n                \"topicType\": [\r\n                    { required: true, message: '请选择课题类型', trigger: 'change' }\r\n                ],\r\n                \"topicSource\": [\r\n                    { required: true, message: '请选择课题来源', trigger: 'change' }\r\n                ]\r\n            }\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            const _this = this\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {//验证通过\r\n                    alert('submit!');\r\n                    this.resetForm(formName)\r\n                    \r\n                } else {\r\n                    return false;\r\n                }\r\n            })\r\n        },\r\n        nextTopic(formName){\r\n            const _this = this\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {//验证通过\r\n                    alert('submit!');\r\n                    this.resetForm(formName)\r\n                } else {\r\n                    return false;\r\n                }\r\n            })\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        closeDialog(){\r\n            this.$emit('close',false)\r\n        },\r\n        //发送请求获取typeList\r\n        async getTypeList() {\r\n            const resp = await this.$http.get('/dictTopicType')\r\n            if (resp.data.code === 200) {\r\n                this.typeList = resp.data.data\r\n            }\r\n        },\r\n        //发送请求获取sourceList\r\n        async getSourceList() {\r\n            const resp = await this.$http.get('/dictTopicSource')\r\n            if (resp.data.code === 200) {\r\n                this.sourceList = resp.data.data\r\n            }\r\n        },\r\n\r\n    },\r\n    created() {\r\n        //发送请求获取typeList\r\n        this.getTypeList()\r\n        //发送请求获取sourceList\r\n        this.getSourceList()\r\n\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n.form_main {\r\n    line-height: 23px;\r\n}\r\n\r\n.btn {\r\n    width: 200px;\r\n    font-size: 18px;\r\n}\r\n\r\n.header_main {\r\n    line-height: 23px;\r\n    font-size: 18px;\r\n    text-align: left;\r\n    margin-bottom: 50px;\r\n\r\n}\r\n\r\n.title_div {\r\n    text-align: center;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n}\r\n\r\n.header_main .el-button {\r\n    height: 23px;\r\n    line-height: 23px;\r\n    font-size: 18px;\r\n    text-align: right;\r\n    padding: 0;\r\n\r\n}\r\n\r\n\r\n.el-select {\r\n    width: 120px;\r\n}\r\n\r\n/deep/.el-form--inline .el-form-item__label {\r\n    font-size: 18px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}