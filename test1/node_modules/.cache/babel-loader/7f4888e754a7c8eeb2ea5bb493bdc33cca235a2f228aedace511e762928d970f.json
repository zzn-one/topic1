{"ast":null,"code":"import jwt_prase from '@/assets/js/jwtPrase';\nimport NewTopic from '@/components/home/tutor/NewTopic.vue';\nexport default {\n  name: \"TutorTopic\",\n  components: {\n    NewTopic\n  },\n  data() {\n    return {\n      filterTopicPassed: [{\n        text: \"不及格\",\n        value: \"不及格\"\n      }, {\n        text: \"基本及格\",\n        value: \"基本及格\"\n      }, {\n        text: \"及格\",\n        value: \"及格\"\n      }],\n      filterTopicSource: [{\n        text: \"自命题\",\n        value: \"自命题\"\n      }, {\n        text: \"企业\",\n        value: \"企业\"\n      }, {\n        text: \"教师科研\",\n        value: \"教师科研\"\n      }],\n      filterTopicType: [{\n        text: \"论文\",\n        value: \"论文\"\n      }, {\n        text: \"设计\",\n        value: \"设计\"\n      }],\n      detailVisable: false,\n      newTopicVisable: false,\n      myTopicList: [],\n      typeList: [],\n      sourceList: [],\n      passedList: []\n    };\n  },\n  methods: {\n    filterMethodTopicType(value, row) {\n      return row.topicType === value;\n    },\n    filterMethodTopicSource(value, row) {\n      return row.topicSource === value;\n    },\n    filterMethodTopicPassed(value, row) {\n      return row.passed === value;\n    },\n    showDetail() {\n      this.detailVisable = true;\n    },\n    openNewTopic() {\n      this.newTopicVisable = true;\n    },\n    closeDialog(val) {\n      this.newTopicVisable = val;\n    },\n    //获取typeList\n    async getTypeList() {\n      const resp = await this.$http.get(\"/dict/topicType\");\n      if (resp.data.code === 200) {\n        this.typeList = resp.data.data;\n      }\n    },\n    //获取sourceList\n    async getSourceList() {\n      const resp = await this.$http.get(\"/dict/topicSource\");\n      if (resp.data.code === 200) {\n        this.sourceList = resp.data.data;\n      }\n    },\n    //获取passedList\n    async getPassedList() {\n      const resp = await this.$http.get(\"/dict/topicPassed\");\n      if (resp.data.code === 200) {\n        this.passedList = resp.data.data;\n      }\n    },\n    //发送请求，根据导师用户id获取毕设课题列表\n    async getTopicList() {\n      const resp = await this.$http.get(\"/topic/\" + jwt_prase().id);\n      if (resp.data.code === 200) {\n        this.myTopicList = resp.data.data;\n        this.praseTopicList(this.myTopicList);\n        console.log(this.myTopicList);\n      }\n    },\n    //数据处理\n    async praseTopicList(topiclist) {\n      const _this = this;\n      topiclist.forEach((topic, index, arr) => {\n        //处理时间数据\n        topic.updatedTime = new Date(topic.updatedTime).toLocaleString();\n\n        //处理type\n        _this.typeList.forEach(item => {\n          if (topic.type === item.type) {\n            topic.type = item.description;\n          }\n        });\n        //处理source\n        _this.sourceList.forEach(item => {\n          if (topic.source === item.source) {\n            topic.source = item.description;\n          }\n        });\n        //处理passed\n        _this.sourceList.forEach(item => {\n          if (topic.passed === item.passId) {\n            topic.passed = item.description;\n          }\n        });\n        //处理审核状态\n        if (topic.checked === 1) {\n          //未审核\n          topic.passed = \"未审核\";\n          topic.checkedBy = topic.checkedTime = topic.checkSuggestions = \"课题未审核\";\n        } else {\n          //发送请求，获取 审核员（管理员）信息\n          this.$http.get(\"/userAdmin/\" + topic.checkedBy).then(resp => {\n            if (resp.data.code === 200) {\n              topic.checkedBy = resp.data.data.aname;\n            }\n          });\n          topic.checkedTime = new Date(topic.checkedTime).toLocaleString();\n        }\n        topiclist = arr;\n      });\n    }\n  },\n  created() {\n    this.getTypeList();\n    this.getSourceList();\n    this.getPassedList();\n    this.getTopicList();\n  }\n};","map":{"version":3,"mappings":"AA0DA;AACA;AAEA;EAEAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC,oBACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAC,oBACA;QACAF;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAE,kBACA;QACAH;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MAEAG;MACAC;MACAC;MACAC;MACAC;MACAC;IAEA;EAEA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QAEA;QACA;QAEAC;MACA;IACA;IACA;IACA;MACA;MACAC;QAEA;QACAC;;QAGA;QACAC;UACA;YACAD;UACA;QACA;QACA;QACAC;UACA;YACAD;UACA;QACA;QACA;QACAC;UACA;YACAD;UACA;QACA;QACA;QACA;UACA;UACAA;UACAA;QACA;UACA;UACA,gDACAE;YACA;cACAF;YACA;UACA;UAGAA;QACA;QAEAD;MACA;IACA;EACA;EAEAI;IACA;IACA;IACA;IAEA;EAEA;AACA","names":["name","components","NewTopic","data","filterTopicPassed","text","value","filterTopicSource","filterTopicType","detailVisable","newTopicVisable","myTopicList","typeList","sourceList","passedList","methods","filterMethodTopicType","filterMethodTopicSource","filterMethodTopicPassed","showDetail","openNewTopic","closeDialog","console","topiclist","topic","_this","then","created"],"sourceRoot":"src/components/home/tutor","sources":["TutorTopic.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"box-card\">\r\n            <div slot=\"header\">\r\n                <el-row>\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"header_div\">\r\n                            <span>我的毕设题目</span>\r\n                            <el-button class=\"header_btn\" @click=\"openNewTopic\" plain type=\"primary\">新增毕设课题</el-button>\r\n                            <el-button class=\"header_btn\" plain type=\"success\" @click=\"showDetail\">查看审核表详情</el-button>\r\n\r\n                        </div>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"show_stu_number\">\r\n                            <span>{{ myTopicList.length }}/10</span>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n            </div>\r\n            <div class=\"item\">\r\n                <el-table height=\"720\" empty-text=\"暂无数据\" :data=\"myTopicList\" scripe border style=\"width: 100%\">\r\n                    <el-table-column type=\"index\" prop=\"id\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"topicName\" label=\"课题名称\" min-width=\"400px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicType\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicType\" prop=\"type\" label=\"课题类别\" min-width=\"100px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicSource\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicSource\" prop=\"source\" label=\"课题来源\" min-width=\"100px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicPassed\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicPassed\" prop=\"passed\" label=\"审核结果\" min-width=\"100px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkedBy\" label=\"审核员名称\" min-width=\"100px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkSuggestions\" label=\"修改建议\" min-width=\"200px\" width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"updatedTime\" label=\"提交时间\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkedTime\" label=\"审核时间\" min-width=\"200px\">\r\n                    </el-table-column>\r\n\r\n                </el-table>\r\n            </div>\r\n        </el-card>\r\n        <el-dialog :visible.sync=\"detailVisable\" width=\"1000px\">\r\n            <Detail ref=\"checkTableDetailRef\"></Detail>\r\n        </el-dialog>\r\n\r\n        <el-dialog :visible.sync=\"newTopicVisable\" width=\"1000px\">\r\n            <NewTopic @close=\"closeDialog\"></NewTopic>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase';\r\nimport NewTopic from '@/components/home/tutor/NewTopic.vue';\r\n\r\nexport default {\r\n\r\n    name: \"TutorTopic\",\r\n    components: {\r\n        NewTopic\r\n    },\r\n    data() {\r\n        return {\r\n            filterTopicPassed: [\r\n                {\r\n                    text: \"不及格\",\r\n                    value: \"不及格\"\r\n                },\r\n                {\r\n                    text: \"基本及格\",\r\n                    value: \"基本及格\"\r\n                },\r\n                {\r\n                    text: \"及格\",\r\n                    value: \"及格\"\r\n                },\r\n            ],\r\n            filterTopicSource: [\r\n                {\r\n                    text: \"自命题\",\r\n                    value: \"自命题\"\r\n                },\r\n                {\r\n                    text: \"企业\",\r\n                    value: \"企业\"\r\n                },\r\n                {\r\n                    text: \"教师科研\",\r\n                    value: \"教师科研\"\r\n                },\r\n            ],\r\n            filterTopicType: [\r\n                {\r\n                    text: \"论文\",\r\n                    value: \"论文\"\r\n                },\r\n                {\r\n                    text: \"设计\",\r\n                    value: \"设计\"\r\n                },\r\n            ],\r\n\r\n            detailVisable: false,\r\n            newTopicVisable: false,\r\n            myTopicList: [],\r\n            typeList: [],\r\n            sourceList: [],\r\n            passedList: []\r\n\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        filterMethodTopicType(value, row) {\r\n            return row.topicType === value\r\n        },\r\n        filterMethodTopicSource(value, row) {\r\n            return row.topicSource === value\r\n        },\r\n        filterMethodTopicPassed(value, row) {\r\n            return row.passed === value\r\n        },\r\n        showDetail() {\r\n            this.detailVisable = true\r\n        },\r\n        openNewTopic() {\r\n            this.newTopicVisable = true\r\n        },\r\n        closeDialog(val) {\r\n            this.newTopicVisable = val\r\n        },\r\n        //获取typeList\r\n        async getTypeList() {\r\n            const resp = await this.$http.get(\"/dict/topicType\")\r\n            if (resp.data.code === 200) {\r\n                this.typeList = resp.data.data\r\n            }\r\n        },\r\n        //获取sourceList\r\n        async getSourceList() {\r\n            const resp = await this.$http.get(\"/dict/topicSource\")\r\n            if (resp.data.code === 200) {\r\n                this.sourceList = resp.data.data\r\n            }\r\n        },\r\n        //获取passedList\r\n        async getPassedList() {\r\n            const resp = await this.$http.get(\"/dict/topicPassed\")\r\n            if (resp.data.code === 200) {\r\n                this.passedList = resp.data.data\r\n            }\r\n        },\r\n        //发送请求，根据导师用户id获取毕设课题列表\r\n        async getTopicList() {\r\n            const resp = await this.$http.get(\"/topic/\" + jwt_prase().id)\r\n            if (resp.data.code === 200) {\r\n\r\n                this.myTopicList = resp.data.data\r\n                this.praseTopicList(this.myTopicList)\r\n\r\n                console.log(this.myTopicList);\r\n            }\r\n        },\r\n        //数据处理\r\n        async praseTopicList(topiclist) {\r\n            const _this = this\r\n            topiclist.forEach((topic, index, arr) => {\r\n\r\n                //处理时间数据\r\n                topic.updatedTime = new Date(topic.updatedTime).toLocaleString()\r\n\r\n\r\n                //处理type\r\n                _this.typeList.forEach((item => {\r\n                    if (topic.type === item.type) {\r\n                        topic.type = item.description\r\n                    }\r\n                }))\r\n                //处理source\r\n                _this.sourceList.forEach((item => {\r\n                    if (topic.source === item.source) {\r\n                        topic.source = item.description\r\n                    }\r\n                }))\r\n                //处理passed\r\n                _this.sourceList.forEach((item => {\r\n                    if (topic.passed === item.passId) {\r\n                        topic.passed = item.description\r\n                    }\r\n                }))\r\n                //处理审核状态\r\n                if (topic.checked === 1) {\r\n                    //未审核\r\n                    topic.passed = \"未审核\"\r\n                    topic.checkedBy = topic.checkedTime = topic.checkSuggestions = \"课题未审核\"\r\n                } else {\r\n                    //发送请求，获取 审核员（管理员）信息\r\n                    this.$http.get(\"/userAdmin/\" + topic.checkedBy)\r\n                        .then(resp => {\r\n                            if (resp.data.code === 200) {\r\n                                topic.checkedBy = resp.data.data.aname\r\n                            }\r\n                        })\r\n\r\n\r\n                    topic.checkedTime = new Date(topic.checkedTime).toLocaleString()\r\n                }\r\n\r\n                topiclist = arr\r\n            });\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.getTypeList()\r\n        this.getSourceList()\r\n        this.getPassedList()\r\n\r\n        this.getTopicList()\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.box-card {\r\n    line-height: 24px;\r\n    min-height: 818px;\r\n    text-align: left;\r\n    font-size: 20px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\n.header_btn {\r\n    font-size: 18px;\r\n    margin-left: 20px;\r\n    width: 180px;\r\n}\r\n\r\n.header_div {\r\n    width: 520px;\r\n}\r\n\r\n.el-table {\r\n    text-align: center;\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-table__row {\r\n    height: 66px;\r\n}\r\n\r\n.show_stu_number {\r\n    float: right;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}