{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport jwtPrase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"StudentMsgExportForm\",\n  data() {\n    return {\n      exportForm: {\n        major: '',\n        number: 0\n      },\n      //数据最大条数\n      max: 10,\n      majorList: []\n    };\n  },\n  methods: {\n    //getMax 获取当前选择条件的最大信息数目\n    async getMax() {\n      let college = jwtPrase().college;\n      const resp = await this.$http({\n        url: '/userStudent/getExcelMax/' + college,\n        method: \"post\",\n        data: this.exportForm\n      });\n      if (resp.data.code === 200) {\n        this.max = resp.data.data;\n      }\n    },\n    //获取majorList\n    async getMajorList() {\n      let college = jwtPrase().college;\n      const resp = await this.$http.get('/dict/major/college/' + college);\n      if (resp.data.code === 200) {\n        this.majorList = resp.data.data;\n        this.majorList.unshift({\n          major: '',\n          description: '全部专业'\n        });\n      }\n    },\n    //导出所有指导老师数据（学院）\n    exportAllMsg() {\n      let college = jwtPrase().college;\n      this.$http({\n        method: \"get\",\n        url: \"/userTutor/exportAllMsg/\" + college,\n        responseType: \"blob\" // 表明返回服务器返回的数据类型\n      }).then(res => {\n        // 处理返回的文件流\n        let blob = new Blob([res.data], {\n          type: res.data.type\n        });\n        //获取fileName,截取content-disposition的filename；按=分割，取最后一个\n        const fileName = decodeURI(res.headers['content-disposition'].split(\"=\")[1], \"UTF-8\");\n        let downloadElement = document.createElement(\"a\");\n        let href = window.URL.createObjectURL(blob); //创建下载的链接\n        downloadElement.href = href;\n        downloadElement.download = fileName; //下载后文件名\n        document.body.appendChild(downloadElement);\n        downloadElement.click(); //点击下载\n        document.body.removeChild(downloadElement); //下载完成移除元素\n        window.URL.revokeObjectURL(href); //释放blob\n        this.$message.success(\"[指导老师信息]已成功导出!\");\n      }).catch(function (error) {\n        // 请求失败处理\n        console.log(error);\n      });\n    },\n    //按 条件导出 指导老师信息数据\n    exportMsgByCondition() {\n      let college = jwtPrase().college;\n      this.$http({\n        method: \"post\",\n        data: this.exportForm,\n        url: \"/userTutor/exportMsgByCondition/\" + college,\n        responseType: \"blob\" // 表明返回服务器返回的数据类型\n      }).then(res => {\n        // 处理返回的文件流\n        let blob = new Blob([res.data], {\n          type: res.data.type\n        });\n        //获取fileName,截取content-disposition的filename；按=分割，取最后一个\n        const fileName = decodeURI(res.headers['content-disposition'].split(\"=\")[1], \"UTF-8\");\n        let downloadElement = document.createElement(\"a\");\n        let href = window.URL.createObjectURL(blob); //创建下载的链接\n        downloadElement.href = href;\n        downloadElement.download = fileName; //下载后文件名\n        document.body.appendChild(downloadElement);\n        downloadElement.click(); //点击下载\n        document.body.removeChild(downloadElement); //下载完成移除元素\n        window.URL.revokeObjectURL(href); //释放blob\n        this.$message.success(\"[指导老师信息(按条件导出)]已成功导出!\");\n      }).catch(function (error) {\n        // 请求失败处理\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.getMajorList();\n    this.getMax();\n  },\n  watch: {\n    'exportForm.major'() {\n      this.getMax();\n    }\n  }\n};","map":{"version":3,"mappings":";AAwBA;AACA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACA;MACAC;MACAC;IACA;EAEA;EACAC;IAEA;IACA;MACA;MACA,8BACA;QACAC;QACAC;QACAR;MACA;MACA;QACA;MACA;IAEA;IACA;IACA;MACA;MACA;MACA;QACA;QACA;UAAAE;UAAAO;QAAA;MACA;IACA;IAEA;IACAC;MACA;MAEA;QACAF;QACAD;QACAI;MACA,GACAC;QACA;QACA;UAAAC;QAAA;QACA;QACA;QACA;QACA;QACAC;QACAA;QACAC;QACAD;QACAC;QACAC;QACA;MACA,GACAC;QACA;QACAC;MACA;IACA;IACA;IACAC;MACA;MAEA;QACAX;QACAR;QACAO;QACAI;MACA,GACAC;QACA;QACA;UAAAC;QAAA;QACA;QACA;QACA;QACA;QACAC;QACAA;QACAC;QACAD;QACAC;QACAC;QACA;MACA,GACAC;QACA;QACAC;MACA;IACA;EAEA;EACAE;IACA;IACA;EACA;EACAC;IACA;MACA;IACA;EACA;AAEA","names":["name","data","exportForm","major","number","max","majorList","methods","url","method","description","exportAllMsg","responseType","then","type","downloadElement","document","window","catch","console","exportMsgByCondition","created","watch"],"sourceRoot":"src/components/home/admin","sources":["TutorMsgExportForm.vue"],"sourcesContent":["<template>\r\n    <el-card class=\"box-card2\">\r\n        <el-form inline :model=\"exportForm\">\r\n            <el-form-item label=\"所属系\">\r\n                <el-select v-model=\"exportForm.major\">\r\n                    <el-option v-for=\"item in majorList\" :label=\"item.description\" :value=\"item.major\"\r\n                        :key=\"item.major\">\r\n                    </el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item :label=\"'查询信息数目(当前条件最大信息数目为:' + max + ')'\">\r\n                <el-input-number v-model=\"exportForm.number\" :min=\"0\" :max=\"max\" label=\"指导老师信息条数\"></el-input-number>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" plain @click=\"exportMsgByCondition\">按条件导出</el-button>\r\n                <el-button type=\"success\" plain class=\"btn_\" @click=\"exportAllMsg\">全部导出</el-button>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n    </el-card>\r\n\r\n</template>\r\n\r\n<script>\r\nimport jwtPrase from '@/assets/js/jwtPrase';\r\nexport default {\r\n    name: \"StudentMsgExportForm\",\r\n    data() {\r\n        return {\r\n            exportForm: {\r\n                major: '',\r\n                number: 0,\r\n            },\r\n            //数据最大条数\r\n            max: 10,\r\n            majorList: [],\r\n        }\r\n\r\n    },\r\n    methods: {\r\n\r\n        //getMax 获取当前选择条件的最大信息数目\r\n        async getMax() {\r\n            let college = jwtPrase().college\r\n            const resp = await this.$http(\r\n                {\r\n                    url: '/userStudent/getExcelMax/' + college,\r\n                    method: \"post\",\r\n                    data: this.exportForm\r\n                })\r\n            if (resp.data.code === 200) {\r\n                this.max = resp.data.data\r\n            }\r\n\r\n        },\r\n        //获取majorList\r\n        async getMajorList() {\r\n            let college = jwtPrase().college\r\n            const resp = await this.$http.get('/dict/major/college/' + college)\r\n            if (resp.data.code === 200) {\r\n                this.majorList = resp.data.data\r\n                this.majorList.unshift({ major: '', description: '全部专业' })\r\n            }\r\n        },\r\n\r\n        //导出所有指导老师数据（学院）\r\n        exportAllMsg() {\r\n            let college = jwtPrase().college\r\n\r\n            this.$http({\r\n                method: \"get\",\r\n                url: \"/userTutor/exportAllMsg/\" + college,\r\n                responseType: \"blob\", // 表明返回服务器返回的数据类型\r\n            })\r\n                .then((res) => {\r\n                    // 处理返回的文件流\r\n                    let blob = new Blob([res.data], { type: res.data.type });\r\n                    //获取fileName,截取content-disposition的filename；按=分割，取最后一个\r\n                    const fileName = decodeURI(res.headers['content-disposition'].split(\"=\")[1], \"UTF-8\");\r\n                    let downloadElement = document.createElement(\"a\");\r\n                    let href = window.URL.createObjectURL(blob); //创建下载的链接\r\n                    downloadElement.href = href;\r\n                    downloadElement.download = fileName; //下载后文件名\r\n                    document.body.appendChild(downloadElement);\r\n                    downloadElement.click(); //点击下载\r\n                    document.body.removeChild(downloadElement); //下载完成移除元素\r\n                    window.URL.revokeObjectURL(href); //释放blob\r\n                    this.$message.success(\"[指导老师信息]已成功导出!\");\r\n                })\r\n                .catch(function (error) {\r\n                    // 请求失败处理\r\n                    console.log(error);\r\n                });\r\n        },\r\n        //按 条件导出 指导老师信息数据\r\n        exportMsgByCondition() {\r\n            let college = jwtPrase().college\r\n\r\n            this.$http({\r\n                method: \"post\",\r\n                data: this.exportForm,\r\n                url: \"/userTutor/exportMsgByCondition/\" + college,\r\n                responseType: \"blob\", // 表明返回服务器返回的数据类型\r\n            })\r\n                .then((res) => {\r\n                    // 处理返回的文件流\r\n                    let blob = new Blob([res.data], { type: res.data.type });\r\n                    //获取fileName,截取content-disposition的filename；按=分割，取最后一个\r\n                    const fileName = decodeURI(res.headers['content-disposition'].split(\"=\")[1], \"UTF-8\");\r\n                    let downloadElement = document.createElement(\"a\");\r\n                    let href = window.URL.createObjectURL(blob); //创建下载的链接\r\n                    downloadElement.href = href;\r\n                    downloadElement.download = fileName; //下载后文件名\r\n                    document.body.appendChild(downloadElement);\r\n                    downloadElement.click(); //点击下载\r\n                    document.body.removeChild(downloadElement); //下载完成移除元素\r\n                    window.URL.revokeObjectURL(href); //释放blob\r\n                    this.$message.success(\"[指导老师信息(按条件导出)]已成功导出!\");\r\n                })\r\n                .catch(function (error) {\r\n                    // 请求失败处理\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n    },\r\n    created() {\r\n        this.getMajorList()\r\n        this.getMax()\r\n    },\r\n    watch: {\r\n        'exportForm.major'() {\r\n            this.getMax()\r\n        },\r\n    }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.box-card2 {\r\n    height: 100px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}