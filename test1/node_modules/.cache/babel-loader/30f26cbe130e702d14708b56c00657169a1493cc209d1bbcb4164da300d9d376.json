{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport UpdatePassword from '@/components/home/shared/UpdatePassword.vue';\nimport UpdateUserMsg from '@/components/home/shared/UpdateUserMsg.vue';\nexport default {\n  name: \"UserMsg\",\n  components: {\n    UpdatePassword,\n    UpdateUserMsg\n  },\n  data() {\n    return {\n      labelList: [],\n      valueList: [],\n      updatedPassDialogVisible: false,\n      updatedMsgDialogVisible: false\n    };\n  },\n  methods: {\n    showUpdatedPass() {\n      this.updatedPassDialogVisible = true;\n    },\n    showUpdateMsg() {\n      this.updatedMsgDialogVisible = true;\n    },\n    updateDialogClose(val) {\n      this.updatedPassDialogVisible = val;\n    },\n    updateMsgDialogClose(val) {\n      this.updatedMsgDialogVisible = val;\n    },\n    //解码jwt\n    jwt_prase() {\n      let token = localStorage.getItem(\"jwt\").split(\".\");\n      let payload = JSON.parse(decodeURIComponent(escape(window.atob(token[1].replace(/-/g, \"+\").replace(/_/g, \"/\")))));\n      return payload;\n    },\n    //根据jwt里的id  获取用户信息(管理员)\n    async getAdminMsg(aId) {\n      const resp = await this.$http.get('/userAdmin/' + aId);\n      if (resp.data.code === 200) {\n        console.log(resp.data.data);\n      }\n      this.valueList = [\"300015210227\", \"假名字\", \"假性别\", \"假学院\", \"假手机\", \"假邮箱\", \"这里是假的办公室\"];\n    }\n  },\n  created() {\n    const studentLabelList = [\"学号\", \"姓名\", \"性别\", \"学院\", \"专业\", \"毕业年份\", \"手机号\", \"邮箱\", \"毕业课题\", \"指导老师\", \"指导老师手机号\", \"指导老师邮箱\", \"指导老师办公室\"];\n    const tutorLabelList = [\"工号\", \"姓名\", \"性别\", \"所属学院\", \"所属系\", \"手机号\", \"邮箱\", \"办公室\"];\n    const adminLabelList = [\"工号\", \"姓名\", \"性别\", \"所属学院\", \"手机号\", \"邮箱\", \"办公室\"];\n\n    //根据jwt获取用户类型\n    let payload = this.jwt_prase();\n    const userType = payload.userType;\n\n    //根据用户类型 选择 labelList\n    if (userType == '0') {\n      //毕业生\n      this.labelList = studentLabelList;\n\n      //根据jwt里的id 获取用户信息\n      this.valueList = [\"300015210227\", \"假名字\", \"假性别\", \"假学院\", \"假专业\", \"假年份\", \"假手机\", \"假邮箱\", \"假课题\", \"假老师\", \"假手机\", \"zzz02902@163.com\", \"这里是假的办公室\"];\n    } else if (userType == '1') {\n      //导师\n      this.labelList = tutorLabelList;\n\n      //根据jwt里的id 获取用户信息\n      this.valueList = [\"300015210227\", \"假名字\", \"假性别\", \"假学院\", \"假专业\", \"假手机\", \"假邮箱\", \"这里是假的办公室\"];\n    } else if (userType == '2') {\n      //管理员\n      this.labelList = adminLabelList;\n\n      //根据jwt里的id  获取用户信息\n      this.getAdminMsg(payload.id);\n    } else {\n      return;\n    }\n  }\n};","map":{"version":3,"mappings":";AAwBA;AACA;AAEA;EACAA;EACAC;IACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACA;MAEA;MAEA;QACAC;MACA;MAEA,kBACA,gBACA,OACA,OACA,OACA,OACA,OACA,WACA;IACA;EACA;EACAC;IACA,gCACA,MACA,MACA,MACA,MACA,QACA,OACA,MACA,QACA,QACA,WACA,UACA,UACA;IACA,8BACA,MACA,MACA,QACA,OACA,OACA,MACA,MACA;IACA,8BACA,MACA,MACA,QACA,OACA,MACA,MACA;;IAEA;IACA;IACA;;IAEA;IACA;MACA;MACA;;MAEA;MACA,kBACA,gBACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,oBACA,WACA;IAEA;MACA;MACA;;MAEA;MACA,kBACA,gBACA,OACA,OACA,OACA,OACA,OACA,OACA,WACA;IAEA;MACA;MACA;;MAEA;MACA;IAGA;MACA;IACA;EAEA;AACA","names":["name","components","UpdatePassword","UpdateUserMsg","data","labelList","valueList","updatedPassDialogVisible","updatedMsgDialogVisible","methods","showUpdatedPass","showUpdateMsg","updateDialogClose","updateMsgDialogClose","jwt_prase","console","created"],"sourceRoot":"src/components/home/shared","sources":["UserMsg.vue"],"sourcesContent":["<template>\r\n    <div class=\"main\">\r\n        <el-descriptions class=\"margin-top\" title=\"用户信息\" :column=\"2\" border>\r\n            <template slot=\"extra\">\r\n                <el-button plain type=\"warning\" @click=\"showUpdateMsg\">修改信息</el-button>\r\n                <el-button plain type=\"warning\" @click=\"showUpdatedPass\">修改密码</el-button>\r\n            </template>\r\n            <template v-for=\"label, index  in labelList \">\r\n                <el-descriptions-item>\r\n                    <template slot=\"label\">\r\n                        <i class=\"el-icon-s-data\"></i>\r\n                        {{ label }}\r\n                    </template>\r\n                    {{ valueList[index] }}\r\n                </el-descriptions-item>\r\n            </template>\r\n        </el-descriptions>\r\n        <UpdatePassword :visible=\"updatedPassDialogVisible\" @close=\"updateDialogClose\"></UpdatePassword>\r\n        <UpdateUserMsg :visible=\"updatedMsgDialogVisible\" @close=\"updateMsgDialogClose\"></UpdateUserMsg>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport UpdatePassword from '@/components/home/shared/UpdatePassword.vue';\r\nimport UpdateUserMsg from '@/components/home/shared/UpdateUserMsg.vue';\r\n\r\nexport default {\r\n    name: \"UserMsg\",\r\n    components: {\r\n        UpdatePassword,\r\n        UpdateUserMsg\r\n    },\r\n    data() {\r\n        return {\r\n            labelList: [],\r\n            valueList: [],\r\n            updatedPassDialogVisible: false,\r\n            updatedMsgDialogVisible: false\r\n        }\r\n    },\r\n    methods: {\r\n        showUpdatedPass() {\r\n            this.updatedPassDialogVisible = true\r\n        },\r\n        showUpdateMsg() {\r\n            this.updatedMsgDialogVisible = true\r\n        },\r\n        updateDialogClose(val) {\r\n            this.updatedPassDialogVisible = val\r\n        },\r\n        updateMsgDialogClose(val) {\r\n            this.updatedMsgDialogVisible = val\r\n        },\r\n        //解码jwt\r\n        jwt_prase() {\r\n            let token = localStorage.getItem(\"jwt\").split(\".\")\r\n            let payload = JSON.parse(decodeURIComponent(escape(window.atob(token[1].replace(/-/g, \"+\").replace(/_/g, \"/\")))))\r\n            return payload\r\n        },\r\n        //根据jwt里的id  获取用户信息(管理员)\r\n        async getAdminMsg(aId) {\r\n\r\n            const resp = await this.$http.get('/userAdmin/' + aId)\r\n\r\n            if (resp.data.code === 200) {\r\n                console.log(resp.data.data);\r\n            }\r\n\r\n            this.valueList = [\r\n                \"300015210227\",\r\n                \"假名字\",\r\n                \"假性别\",\r\n                \"假学院\",\r\n                \"假手机\",\r\n                \"假邮箱\",\r\n                \"这里是假的办公室\"\r\n            ]\r\n        },\r\n    },\r\n    created() {\r\n        const studentLabelList = [\"学号\",\r\n            \"姓名\",\r\n            \"性别\",\r\n            \"学院\",\r\n            \"专业\",\r\n            \"毕业年份\",\r\n            \"手机号\",\r\n            \"邮箱\",\r\n            \"毕业课题\",\r\n            \"指导老师\",\r\n            \"指导老师手机号\",\r\n            \"指导老师邮箱\",\r\n            \"指导老师办公室\"\r\n        ]\r\n        const tutorLabelList = [\"工号\",\r\n            \"姓名\",\r\n            \"性别\",\r\n            \"所属学院\",\r\n            \"所属系\",\r\n            \"手机号\",\r\n            \"邮箱\",\r\n            \"办公室\"\r\n        ]\r\n        const adminLabelList = [\"工号\",\r\n            \"姓名\",\r\n            \"性别\",\r\n            \"所属学院\",\r\n            \"手机号\",\r\n            \"邮箱\",\r\n            \"办公室\"\r\n        ]\r\n\r\n        //根据jwt获取用户类型\r\n        let payload = this.jwt_prase()\r\n        const userType = payload.userType\r\n\r\n        //根据用户类型 选择 labelList\r\n        if (userType == '0') {\r\n            //毕业生\r\n            this.labelList = studentLabelList\r\n\r\n            //根据jwt里的id 获取用户信息\r\n            this.valueList = [\r\n                \"300015210227\",\r\n                \"假名字\",\r\n                \"假性别\",\r\n                \"假学院\",\r\n                \"假专业\",\r\n                \"假年份\",\r\n                \"假手机\",\r\n                \"假邮箱\",\r\n                \"假课题\",\r\n                \"假老师\",\r\n                \"假手机\",\r\n                \"zzz02902@163.com\",\r\n                \"这里是假的办公室\"\r\n            ]\r\n\r\n        } else if (userType == '1') {\r\n            //导师\r\n            this.labelList = tutorLabelList\r\n\r\n            //根据jwt里的id 获取用户信息\r\n            this.valueList = [\r\n                \"300015210227\",\r\n                \"假名字\",\r\n                \"假性别\",\r\n                \"假学院\",\r\n                \"假专业\",\r\n                \"假手机\",\r\n                \"假邮箱\",\r\n                \"这里是假的办公室\"\r\n            ]\r\n\r\n        } else if (userType == '2') {\r\n            //管理员\r\n            this.labelList = adminLabelList\r\n\r\n            //根据jwt里的id  获取用户信息\r\n            this.getAdminMsg(payload.id)\r\n\r\n\r\n        } else {\r\n            return;\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.main {\r\n    line-height: 80px;\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n/deep/.el-descriptions__body .el-descriptions__table {\r\n    height: 720px;\r\n\r\n}\r\n\r\n/deep/.el-descriptions__body {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\n/deep/.el-descriptions {\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-descriptions__title {\r\n    font-size: 24px;\r\n}\r\n\r\n/deep/.el-descriptions-item__label.is-bordered-label {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    color: black;\r\n}\r\n\r\n/deep/.el-button {\r\n    font-size: 18px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}