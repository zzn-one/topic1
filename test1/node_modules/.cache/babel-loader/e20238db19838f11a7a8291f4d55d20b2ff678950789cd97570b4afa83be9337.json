{"ast":null,"code":"import jwtPrase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"UpdateUserMsg\",\n  props: [\"visible\"],\n  emits: ['close'],\n  data() {\n    var validatePhone = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入手机号'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入邮箱'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        id: '',\n        name: '',\n        phone: '',\n        email: ''\n      },\n      rules: {\n        phone: [{\n          validator: validatePhone,\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: validateEmail,\n          trigger: 'blur'\n        }]\n      },\n      dialogVisible: false\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //验证成功，发送aixos请求\n          this.updateMsg();\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n      this.$emit('close', false);\n    },\n    async getMsg() {\n      //获取用户信息\n      let id = jwtPrase().id;\n      let name = jwtPrase().name;\n      let userType = jwtPrase().userType;\n      let url;\n      if (userType == 0) {\n        //毕业生\n        url = \"/userStudent/\";\n      } else if (userType == 1) {\n        //导师\n        url = \"/userTutor/\";\n      } else if (userType == 2) {\n        //管理员\n        url = \"/userAdmin/\";\n      }\n      const resp = await this.$http.get(url + id);\n      if (resp.data.code === 200) {\n        let user = resp.data.data;\n        this.ruleForm.id = id;\n        this.ruleForm.name = name;\n        this.ruleForm.phone = user.phone;\n        this.ruleForm.email = user.email;\n      }\n    },\n    async updateMsg() {\n      //获取用户信息\n      let id = jwtPrase().id;\n      let name = jwtPrase().name;\n      let userType = jwtPrase().userType;\n      let url;\n      if (userType == 0) {\n        //毕业生\n        url = \"/userStudent/\";\n      } else if (userType == 1) {\n        //导师\n        url = \"/userTutor/\";\n      } else if (userType == 2) {\n        //管理员\n        url = \"/userAdmin/\";\n      }\n      url += \"/updateMsg\";\n      const resp = await this.$http.axios({\n        method: 'put',\n        url: url,\n        data: {\n          id: this.ruleForm\n        }\n      });\n      console.log(resp.data);\n      if (resp.data.code === 200) {\n        // let user = resp.data.data\n        // this.ruleForm.id = id\n        // this.ruleForm.name = name\n        // this.ruleForm.phone = user.phone\n        // this.ruleForm.email = user.email\n      }\n    }\n  },\n  watch: {\n    visible(newValue) {\n      this.dialogVisible = newValue;\n    }\n  },\n  created() {\n    this.getMsg();\n  },\n  beforeUpdate() {\n    this.getMsg();\n  }\n};","map":{"version":3,"mappings":"AA8BA;AAEA;EACAA;EACAC;EACAC;EACAC;IACA;MACA;QACAC;MACA;QACA;UACA;QACA;QACAA;MACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;IACA;IACA;MACAC;QACAC;QACAN;QACAO;QACAC;MACA;MACAC;QACAF,QACA;UAAAG;UAAAC;QAAA,EACA;QACAH,QACA;UAAAE;UAAAC;QAAA;MAEA;MACAC;IAGA;EACA;EACAC;IACAC;MACA;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;IACA;IACA;MACA;MACA;MACA;MAEA;MACA;MAEA;QACA;QACAC;MACA;QACA;QACAA;MAEA;QACA;QACAA;MACA;MAEA;MAEA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;MACA;MACA;MACA;MAEA;MACA;MAEA;QACA;QACAA;MACA;QACA;QACAA;MAEA;QACA;QACAA;MACA;MACAA;MAEA;QACAC;QACAD;QACAd;UACAG;QACA;MACA;MAEAa;MACA;QACA;QACA;QACA;QACA;QACA;MAAA;IAEA;EACA;EACAC;IACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACA;EACA;AACA","names":["name","props","emits","data","callback","ruleForm","id","phone","email","rules","validator","trigger","dialogVisible","methods","submitForm","resetForm","closeDialog","url","method","console","watch","visible","created","beforeUpdate"],"sourceRoot":"src/components/home/shared","sources":["UpdateUserMsg.vue"],"sourcesContent":["<template>\r\n    <el-dialog title=\"修改个人信息\" :visible.sync=\"dialogVisible\" :show-close=\"false\" :close-on-press-escape=\"false\"\r\n        :close-on-click-modal=\"false\">\r\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n            <!-- <el-form-item label=\"头像\" prop=\"pass\">\r\n                <el-input  type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n            </el-form-item> -->\r\n            <el-form-item label=\"账号\" prop=\"id\">\r\n                <el-input type=\"text\" v-model=\"ruleForm.id\" autocomplete=\"off\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"用户名\" prop=\"name\">\r\n                <el-input type=\"text\" v-model=\"ruleForm.name\" autocomplete=\"off\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"手机号\" prop=\"phone\">\r\n                <el-input type=\"text\" v-model=\"ruleForm.phone\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\" prop=\"email\">\r\n                <el-input type=\"text\" v-model.number=\"ruleForm.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button class=\"btn\" plain type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n                <el-button class=\"btn\" plain type=\"warning\" @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                <el-button class=\"btn\" plain type=\"danger\" @click=\"closeDialog\">取 消</el-button>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n\r\n    </el-dialog>\r\n</template>\r\n<script>\r\nimport jwtPrase from '@/assets/js/jwtPrase';\r\n\r\nexport default {\r\n    name: \"UpdateUserMsg\",\r\n    props: [\"visible\"],\r\n    emits: ['close'],\r\n    data() {\r\n        var validatePhone = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入手机号'));\r\n            } else {\r\n                if (this.ruleForm.checkPass !== '') {\r\n                    this.$refs.ruleForm.validateField('checkPass');\r\n                }\r\n                callback();\r\n            }\r\n        };\r\n        var validateEmail = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入邮箱'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            ruleForm: {\r\n                id: '',\r\n                name: '',\r\n                phone: '',\r\n                email: '',\r\n            },\r\n            rules: {\r\n                phone: [\r\n                    { validator: validatePhone, trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    { validator: validateEmail, trigger: 'blur' }\r\n                ]\r\n            },\r\n            dialogVisible: false\r\n\r\n\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    //验证成功，发送aixos请求\r\n                    this.updateMsg()\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n        closeDialog() {\r\n            this.dialogVisible = false\r\n            this.$emit('close', false)\r\n        },\r\n        async getMsg() {\r\n            //获取用户信息\r\n            let id = jwtPrase().id\r\n            let name = jwtPrase().name\r\n\r\n            let userType = jwtPrase().userType\r\n            let url;\r\n\r\n            if (userType == 0) {\r\n                //毕业生\r\n                url=\"/userStudent/\"\r\n            } else if (userType == 1) {\r\n                //导师\r\n                url=\"/userTutor/\"\r\n\r\n            } else if (userType == 2) {\r\n                //管理员\r\n                url=\"/userAdmin/\"\r\n            }\r\n\r\n            const resp = await this.$http.get(url + id)\r\n\r\n            if (resp.data.code === 200) {\r\n                let user = resp.data.data\r\n                this.ruleForm.id = id\r\n                this.ruleForm.name = name\r\n                this.ruleForm.phone = user.phone\r\n                this.ruleForm.email = user.email\r\n            }\r\n        },\r\n        async updateMsg(){\r\n            //获取用户信息\r\n            let id = jwtPrase().id\r\n            let name = jwtPrase().name\r\n\r\n            let userType = jwtPrase().userType\r\n            let url;\r\n\r\n            if (userType == 0) {\r\n                //毕业生\r\n                url=\"/userStudent/\"\r\n            } else if (userType == 1) {\r\n                //导师\r\n                url=\"/userTutor/\"\r\n\r\n            } else if (userType == 2) {\r\n                //管理员\r\n                url=\"/userAdmin/\"\r\n            }\r\n            url+=\"/updateMsg\"\r\n\r\n            const resp = await this.$http.axios({\r\n                method:'put',\r\n                url: url,\r\n                data: {\r\n                    id:this.ruleForm\r\n                }\r\n            })\r\n\r\n            console.log(resp.data);\r\n            if (resp.data.code === 200) {\r\n                // let user = resp.data.data\r\n                // this.ruleForm.id = id\r\n                // this.ruleForm.name = name\r\n                // this.ruleForm.phone = user.phone\r\n                // this.ruleForm.email = user.email\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        visible(newValue) {\r\n            this.dialogVisible = newValue\r\n        }\r\n    },\r\n    created() {\r\n        this.getMsg()\r\n    },\r\n    beforeUpdate() {\r\n        this.getMsg()\r\n    }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n/deep/.el-form-item__label {\r\n    font-size: 18px;\r\n    color: black;\r\n}\r\n\r\n/deep/.el-form-item__error {\r\n    font-size: 14px;\r\n}\r\n\r\n/deep/.el-dialog__header {\r\n    line-height: 24px;\r\n}\r\n\r\n/deep/.el-dialog {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    backdrop-filter: blur(10px);\r\n    width: 480px;\r\n    min-width: 480px;\r\n\r\n}\r\n\r\n.btn {\r\n    font-size: 18px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}