{"ast":null,"code":"import jwt_prase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"TopicDisplay\",\n  methods: {\n    // 分页的pageSize\n    handleSizeChange(val) {\n      this.pageSize = val;\n    },\n    // 分页的currentPage\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    filterMethodTopicType(value, row) {\n      return row.type === value;\n    },\n    filterMethodTopicSource(value, row) {\n      return row.source === value;\n    },\n    filterMethodTopicPassed(value, row) {\n      return row.passed === value;\n    },\n    //发送请求，根据管理员用户id获取college  \n    async getCollege() {\n      const resp = await this.$http.get(\"/userAdmin/\" + jwt_prase().id);\n      if (resp.data.code === 200) {\n        this.college = resp.data.data.college;\n      }\n    },\n    //根据college 毕设课题列表\n    async getTopicList() {\n      const topicResp = await this.$http.get(\"/topic/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + college);\n      if (topicResp.data.code === 200) {\n        console.log(topicResp.data.data);\n        this.topicList = topicResp.data.data.records;\n        this.praseTopicList(this.topicList);\n      }\n    },\n    //数据处理\n    async praseTopicList(topiclist) {\n      let typeList;\n      let sourceList;\n      let passedList;\n      let majorList;\n      //获取typeList\n      const typeResp = await this.$http.get(\"/dict/topicType\");\n      if (typeResp.data.code === 200) {\n        typeList = typeResp.data.data;\n      }\n\n      //获取sourceList\n      const sourceResp = await this.$http.get(\"/dict/topicSource\");\n      if (sourceResp.data.code === 200) {\n        sourceList = sourceResp.data.data;\n      }\n\n      //获取passedList\n      const passedResp = await this.$http.get(\"/dict/topicPassed\");\n      if (passedResp.data.code === 200) {\n        passedList = passedResp.data.data;\n      }\n      //获取majorList\n      const majorResp = await this.$http.get(\"/dict/major/\" + this.college);\n      if (majorResp.data.code === 200) {\n        majorList = majorResp.data.data;\n      }\n      topiclist.forEach((topic, index, arr) => {\n        //处理时间数据\n        topic.createdTime = new Date(topic.createdTime).toLocaleString();\n\n        //处理type\n        typeList.forEach(item => {\n          if (topic.type === item.type) {\n            topic.type = item.description;\n          }\n        });\n        //处理source\n        sourceList.forEach(item => {\n          if (topic.source === item.source) {\n            topic.source = item.description;\n          }\n        });\n        //处理passed\n        passedList.forEach(item => {\n          if (topic.passed === item.passId) {\n            topic.passed = item.description;\n          }\n        });\n        //处理major\n        majorList.forEach(item => {\n          if (topic.major === item.majorId) {\n            topic.major = item.description;\n          }\n        });\n\n        //处理审核状态\n        if (topic.checked === 1) {\n          //未审核\n          topic.passed = \"未审核\";\n          topic.checkedBy = topic.checkedTime = topic.checkSuggestions = \"\";\n        } else {\n          //发送请求，获取 审核员（管理员）信息\n          this.$http.get(\"/userAdmin/\" + topic.checkedBy).then(resp => {\n            if (resp.data.code === 200) {\n              topic.checkedBy = resp.data.data.aname;\n            }\n          });\n          topic.checkedTime = new Date(topic.checkedTime).toLocaleString();\n        }\n        topiclist = arr;\n      });\n    }\n  },\n  data() {\n    return {\n      filterTopicPassed: [{\n        text: \"不及格\",\n        value: \"不及格\"\n      }, {\n        text: \"基本及格\",\n        value: \"基本及格\"\n      }, {\n        text: \"及格\",\n        value: \"及格\"\n      }],\n      filterTopicSource: [{\n        text: \"自命题\",\n        value: \"自命题\"\n      }, {\n        text: \"企业\",\n        value: \"企业\"\n      }, {\n        text: \"教师科研\",\n        value: \"教师科研\"\n      }],\n      filterTopicType: [{\n        text: \"论文\",\n        value: \"论文\"\n      }, {\n        text: \"设计\",\n        value: \"设计\"\n      }],\n      topicList: [],\n      college: '',\n      // 分页\n      total: 100,\n      currentPage: 1,\n      pageSize: 5,\n      pageSizeList: [5, 10, 15, 20]\n    };\n  },\n  created() {\n    //发送请求获取topicList\n    this.getTopicList();\n  }\n};","map":{"version":3,"mappings":"AA2CA;AAEA;EACAA;EACAC;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IAEA;IACA;MAEA;MAEA;QACA;MACA;IAEA;IACA;IACA;MACA;MAEA;QACAC;QACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAC;MACA;;MAEA;MACA;MACA;QACAC;MACA;;MAEA;MACA;MACA;QACAC;MACA;MACA;MACA;MACA;QACAC;MACA;MAEAC;QAEA;QACAC;;QAEA;QACAL;UACA;YACAK;UACA;QACA;QACA;QACAJ;UACA;YACAI;UACA;QACA;QACA;QACAH;UACA;YACAG;UACA;QACA;QACA;QACAF;UACA;YACAE;UACA;QACA;;QAEA;QACA;UACA;UACAA;UACAA;QACA;UACA;UACA,gDACAC;YACA;cACAD;YACA;UACA;UAEAA;QACA;QAEAD;MACA;IACA;EACA;EACAG;IACA;MACAC,oBACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAC,oBACA;QACAF;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAE,kBACA;QACAH;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAG;MACAC;MAEA;MACAC;MACAC;MACAC;MACAC;IAEA;EAEA;EACAC;IAEA;IACA;EAGA;AACA","names":["name","methods","handleSizeChange","handleCurrentChange","filterMethodTopicType","filterMethodTopicSource","filterMethodTopicPassed","console","typeList","sourceList","passedList","majorList","topiclist","topic","then","data","filterTopicPassed","text","value","filterTopicSource","filterTopicType","topicList","college","total","currentPage","pageSize","pageSizeList","created"],"sourceRoot":"src/components/home/admin","sources":["TopicDisplay.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"box-card\">\r\n            <div slot=\"header\" class=\"card_header\">\r\n                <span>课题信息</span>\r\n            </div>\r\n            <div class=\"item\">\r\n                <el-table height=\"712\" empty-text=\"暂无数据\" :data=\"topicList\" scripe border style=\"width: 100%\">\r\n                    <el-table-column type=\"index\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"topicName\" label=\"课题名称\" min-width=\"350px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"major\" label=\"专业\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicType\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicType\" prop=\"type\" label=\"课题类别\" min-width=\"110px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicSource\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicSource\" prop=\"source\" label=\"课题来源\" min-width=\"110px\">\r\n                    </el-table-column>\r\n                    <el-table-column :filters=\"filterTopicPassed\" :filter-multiple=\"false\" filter-placement=\"bottom\"\r\n                        :filter-method=\"filterMethodTopicPassed\" prop=\"passed\" label=\"审核结果\" min-width=\"110px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkedBy\" label=\"审核员名称\" min-width=\"120px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkSuggestions\" label=\"修改建议\" min-width=\"190px\" width=\"190px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"createdTime\" label=\"提交时间\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"checkedTime\" label=\"审核时间\" min-width=\"200px\">\r\n                    </el-table-column>\r\n                </el-table>\r\n\r\n                <!-- 分页 -->\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"currentPage\" :page-sizes=\"pageSizeList\" :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase'\r\n\r\nexport default {\r\n    name: \"TopicDisplay\",\r\n    methods: {\r\n        // 分页的pageSize\r\n        handleSizeChange(val) {\r\n            this.pageSize = val\r\n        },\r\n        // 分页的currentPage\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val\r\n        },\r\n        filterMethodTopicType(value, row) {\r\n            return row.type === value\r\n        },\r\n        filterMethodTopicSource(value, row) {\r\n            return row.source === value\r\n        },\r\n        filterMethodTopicPassed(value, row) {\r\n            return row.passed === value\r\n        },\r\n\r\n        //发送请求，根据管理员用户id获取college  \r\n        async getCollege() {\r\n\r\n            const resp = await this.$http.get(\"/userAdmin/\" + jwt_prase().id)\r\n\r\n            if (resp.data.code === 200) {\r\n                this.college = resp.data.data.college\r\n            }\r\n\r\n        },\r\n        //根据college 毕设课题列表\r\n        async getTopicList() {\r\n            const topicResp = await this.$http.get(\"/topic/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + college)\r\n\r\n            if (topicResp.data.code === 200) {\r\n                console.log(topicResp.data.data);\r\n                this.topicList = topicResp.data.data.records\r\n                this.praseTopicList(this.topicList)\r\n            }\r\n        },\r\n        //数据处理\r\n        async praseTopicList(topiclist) {\r\n            let typeList\r\n            let sourceList\r\n            let passedList\r\n            let majorList\r\n            //获取typeList\r\n            const typeResp = await this.$http.get(\"/dict/topicType\")\r\n            if (typeResp.data.code === 200) {\r\n                typeList = typeResp.data.data\r\n            }\r\n\r\n            //获取sourceList\r\n            const sourceResp = await this.$http.get(\"/dict/topicSource\")\r\n            if (sourceResp.data.code === 200) {\r\n                sourceList = sourceResp.data.data\r\n            }\r\n\r\n            //获取passedList\r\n            const passedResp = await this.$http.get(\"/dict/topicPassed\")\r\n            if (passedResp.data.code === 200) {\r\n                passedList = passedResp.data.data\r\n            }\r\n            //获取majorList\r\n            const majorResp = await this.$http.get(\"/dict/major/\" + this.college)\r\n            if (majorResp.data.code === 200) {\r\n                majorList = majorResp.data.data\r\n            }\r\n\r\n            topiclist.forEach((topic, index, arr) => {\r\n\r\n                //处理时间数据\r\n                topic.createdTime = new Date(topic.createdTime).toLocaleString()\r\n\r\n                //处理type\r\n                typeList.forEach((item => {\r\n                    if (topic.type === item.type) {\r\n                        topic.type = item.description\r\n                    }\r\n                }))\r\n                //处理source\r\n                sourceList.forEach((item => {\r\n                    if (topic.source === item.source) {\r\n                        topic.source = item.description\r\n                    }\r\n                }))\r\n                //处理passed\r\n                passedList.forEach((item => {\r\n                    if (topic.passed === item.passId) {\r\n                        topic.passed = item.description\r\n                    }\r\n                }))\r\n                //处理major\r\n                majorList.forEach((item) => {\r\n                    if (topic.major === item.majorId) {\r\n                        topic.major = item.description\r\n                    }\r\n                })\r\n\r\n                //处理审核状态\r\n                if (topic.checked === 1) {\r\n                    //未审核\r\n                    topic.passed = \"未审核\"\r\n                    topic.checkedBy = topic.checkedTime = topic.checkSuggestions = \"\"\r\n                } else {\r\n                    //发送请求，获取 审核员（管理员）信息\r\n                    this.$http.get(\"/userAdmin/\" + topic.checkedBy)\r\n                        .then(resp => {\r\n                            if (resp.data.code === 200) {\r\n                                topic.checkedBy = resp.data.data.aname\r\n                            }\r\n                        })\r\n\r\n                    topic.checkedTime = new Date(topic.checkedTime).toLocaleString()\r\n                }\r\n\r\n                topiclist = arr\r\n            });\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            filterTopicPassed: [\r\n                {\r\n                    text: \"不及格\",\r\n                    value: \"不及格\"\r\n                },\r\n                {\r\n                    text: \"基本及格\",\r\n                    value: \"基本及格\"\r\n                },\r\n                {\r\n                    text: \"及格\",\r\n                    value: \"及格\"\r\n                },\r\n            ],\r\n            filterTopicSource: [\r\n                {\r\n                    text: \"自命题\",\r\n                    value: \"自命题\"\r\n                },\r\n                {\r\n                    text: \"企业\",\r\n                    value: \"企业\"\r\n                },\r\n                {\r\n                    text: \"教师科研\",\r\n                    value: \"教师科研\"\r\n                },\r\n            ],\r\n            filterTopicType: [\r\n                {\r\n                    text: \"论文\",\r\n                    value: \"论文\"\r\n                },\r\n                {\r\n                    text: \"设计\",\r\n                    value: \"设计\"\r\n                },\r\n            ],\r\n            topicList: [],\r\n            college: '',\r\n\r\n            // 分页\r\n            total: 100,\r\n            currentPage: 1,\r\n            pageSize: 5,\r\n            pageSizeList: [5, 10, 15, 20]\r\n\r\n        }\r\n\r\n    },\r\n    created() {\r\n\r\n        //发送请求获取topicList\r\n        this.getTopicList()\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.box-card {\r\n    height: 818px;\r\n    line-height: 23px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.card_header {\r\n    text-align: left;\r\n    font-size: 20px;\r\n}\r\n\r\n.el-table {\r\n    text-align: center;\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-table__row {\r\n    height: 66px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}