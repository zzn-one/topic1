{"ast":null,"code":"import jwt_prase from '@/assets/js/jwtPrase';\nexport default {\n  name: \"StudentTopic\",\n  components: {},\n  methods: {\n    async getStudentMsg() {\n      let sId = jwt_prase().id;\n      const _this = this;\n      const resp = await this.$http.get('/userStudent/' + sId);\n      if (resp.data.code === 200) {\n        let user = resp.data.data;\n        this.valueList[0] = user.sid;\n        this.valueList[1] = user.sname;\n        this.valueList[2] = user.dictGender.description;\n        this.valueList[3] = user.dictCollege.description;\n        this.valueList[4] = user.dictMajor.description;\n        this.valueList[5] = user.graduationYear;\n        this.valueList[6] = user.phone;\n        this.valueList[7] = user.email;\n      }\n      //根据sid去获取topic\n\n      this.$http.get(\"/topic/selected/\" + sId).then(topicResp => {\n        if (topicResp.data.code === 200 && topicResp.data.data !== null) {\n          _this.valueList[8] = topicResp.data.data.topicName;\n          let tId = topicResp.data.data.createdBy;\n          _this.$http.get(\"/userTutor/\" + tId).then(resp => {\n            if (resp.data.code === 200 && resp.data.data !== null) {\n              const tutor = resp.data.data;\n              //根据tId去获取 指导老师信息\n              _this.valueList[9] = tutor.tutorName;\n              _this.valueList[10] = tutor.phone;\n              _this.valueList[11] = tutor.email;\n              _this.valueList[12] = tutor.office;\n              _this.$forceUpdate();\n            }\n          });\n        }\n      });\n    }\n  },\n  data() {\n    const LabelList = [\"课题名称\", \"课题类型\", \"课题来源\", \"指导老师\", \"指导老师职称\", \"指导老师手机号\", \"指导老师邮箱\", \"指导老师办公室\"];\n    return {\n      labelList: LabelList,\n      valueList: []\n    };\n  },\n  created() {\n    //根据sId获取课题信息,再根据课题信息中的tId获取导师信息\n    this.valueList[0] = \"高校智能毕业设计选题管理系统\";\n    this.valueList[1] = \"设计\";\n    this.valueList[2] = \"自命题\";\n\n    //导师信息\n    this.valueList[3] = \"晨钟\";\n    this.valueList[4] = \"教授\";\n    this.valueList[5] = \"1664826408\";\n    this.valueList[6] = \"chenz@163.com\";\n    this.valueList[7] = \"xxx楼701\";\n  }\n};","map":{"version":3,"mappings":"AAiBA;AAEA;EACAA;EACAC,aAEA;EACAC;IACA;MACA;MACA;MACA;MACA;QAEA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;;MAEA;QACA;UACAC;UAEA;UACAA;YACA;cACA;cACA;cACAA;cACAA;cACAA;cACAA;cACAA;YAEA;UAEA;QAEA;MACA;IACA;EACA;EACAC;IACA,2BACA,QACA,QACA,QACA,UACA,WACA,UACA,UACA;IAEA;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EAEA;AAEA","names":["name","components","methods","_this","data","labelList","valueList","created"],"sourceRoot":"src/components/home/student","sources":["StudentTopic.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-descriptions class=\"margin-top\" title=\"我的毕业设计课题\" :column=\"1\" border>\r\n            <template v-for=\"label, index  in labelList \">\r\n                <el-descriptions-item>\r\n                    <template slot=\"label\">\r\n                        <i class=\"el-icon-s-data\"></i>\r\n                        {{ label }}\r\n                    </template>\r\n                    {{ valueList[index] }}\r\n                </el-descriptions-item>\r\n            </template>\r\n        </el-descriptions>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport jwt_prase from '@/assets/js/jwtPrase'\r\n\r\nexport default {\r\n    name: \"StudentTopic\",\r\n    components: {\r\n\r\n    },\r\n    methods: {\r\n        async getStudentMsg() {\r\n            let sId = jwt_prase().id\r\n            const _this = this\r\n            const resp = await this.$http.get('/userStudent/' + sId)\r\n            if (resp.data.code === 200) {\r\n\r\n                let user = resp.data.data\r\n\r\n                this.valueList[0] = user.sid\r\n                this.valueList[1] = user.sname\r\n                this.valueList[2] = user.dictGender.description\r\n                this.valueList[3] = user.dictCollege.description\r\n                this.valueList[4] = user.dictMajor.description\r\n                this.valueList[5] = user.graduationYear\r\n                this.valueList[6] = user.phone\r\n                this.valueList[7] = user.email\r\n            }\r\n            //根据sid去获取topic\r\n\r\n            this.$http.get(\"/topic/selected/\" + sId).then((topicResp) => {\r\n                if (topicResp.data.code === 200 && topicResp.data.data !== null) {\r\n                    _this.valueList[8] = topicResp.data.data.topicName\r\n\r\n                    let tId = topicResp.data.data.createdBy\r\n                    _this.$http.get(\"/userTutor/\" + tId).then((resp) => {\r\n                        if (resp.data.code === 200 && resp.data.data !== null) {\r\n                            const tutor = resp.data.data\r\n                            //根据tId去获取 指导老师信息\r\n                            _this.valueList[9] = tutor.tutorName\r\n                            _this.valueList[10] = tutor.phone\r\n                            _this.valueList[11] = tutor.email\r\n                            _this.valueList[12] = tutor.office\r\n                            _this.$forceUpdate()\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n            })\r\n        },\r\n    },\r\n    data() {\r\n        const LabelList = [\"课题名称\",\r\n            \"课题类型\",\r\n            \"课题来源\",\r\n            \"指导老师\",\r\n            \"指导老师职称\",\r\n            \"指导老师手机号\",\r\n            \"指导老师邮箱\",\r\n            \"指导老师办公室\"\r\n        ]\r\n\r\n        return {\r\n            labelList: LabelList,\r\n            valueList: []\r\n        }\r\n    },\r\n    created() {\r\n        //根据sId获取课题信息,再根据课题信息中的tId获取导师信息\r\n        this.valueList[0] = \"高校智能毕业设计选题管理系统\"\r\n        this.valueList[1] = \"设计\"\r\n        this.valueList[2] = \"自命题\"\r\n\r\n        //导师信息\r\n        this.valueList[3] = \"晨钟\"\r\n        this.valueList[4] = \"教授\"\r\n        this.valueList[5] = \"1664826408\"\r\n        this.valueList[6] = \"chenz@163.com\"\r\n        this.valueList[7] = \"xxx楼701\"\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n/deep/.el-descriptions__header {\r\n    line-height: 100px;\r\n}\r\n\r\n.main {\r\n    background-color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n/deep/.el-descriptions__body .el-descriptions__table {\r\n    height: 700px;\r\n\r\n}\r\n\r\n/deep/.el-descriptions__body {\r\n    background-color: rgba(255, 255, 255, 0.1);\r\n    backdrop-filter: blur(10px);\r\n}\r\n\r\n/deep/.el-descriptions {\r\n    font-size: 18px;\r\n}\r\n\r\n/deep/.el-descriptions__title {\r\n    font-size: 24px;\r\n}\r\n\r\n/deep/.el-descriptions-item__label.is-bordered-label {\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(10px);\r\n    color: black;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}