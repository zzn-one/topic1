{"ast":null,"code":"import DialogStuInfo from '@/components/home/admin/DialogStuInfo.vue';\nimport jwtPrase from '@/assets/js/jwtPrase';\nimport StudentMsgExportForm from '@/components/home/admin/StudentMsgExportForm.vue';\nexport default {\n  name: \"InfoStudent\",\n  components: {\n    DialogStuInfo\n  },\n  data() {\n    return {\n      studentMsgImportFormVisible: false,\n      studentMsgExportFormVisible: false,\n      infoDialogVisible: false,\n      searchForm: {\n        sid: '',\n        sname: '',\n        major: ''\n      },\n      studentList: [],\n      majorList: '',\n      formType: '1',\n      sId: '',\n      // 分页\n      total: 100,\n      currentPage: 1,\n      pageSize: 5,\n      pageSizeList: [5, 10, 20, 30]\n    };\n  },\n  methods: {\n    //新增按钮\n    openInfoAdd() {\n      this.formType = '0';\n      this.sId = '';\n      this.infoDialogVisible = true;\n    },\n    //修改按钮（查看全部信息按钮）\n    openInfoUpdate(rowData) {\n      this.formType = '1';\n      //把sId送进去给DialogStuInfo组件\n      this.sId = rowData.sid;\n      this.infoDialogVisible = true;\n    },\n    // 删除按钮方法\n    deleteStuInfo(rowData) {\n      //使用rowData里的sId发送删除请求\n      this.$confirm(\"该操作将永久删除用户：\" + rowData.sname + \" ,是否继续？ \", \"永久删除用户\", {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        //使用rowData里的id发送删除请求\n        this.deleteById(rowData.id);\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    //查询按钮\n    searchInfo() {\n      this.getStudentList();\n    },\n    //导入按钮\n    importInfo() {\n      this.studentMsgImportFormVisible = true;\n    },\n    //毕业生信息 文件上传\n    importStudentMsg(e) {\n      const file = e.target.files[0];\n      let msgBody = '您要上传文件是  :  ' + file.name;\n      this.$confirm(msgBody, '毕业生信息上传', {\n        confirmButtonText: '确认上传',\n        cancelButtonText: '取消上传',\n        dangerouslyUseHTMLString: true\n      }).then(() => {\n        //上传到后台\n        const formData = new FormData();\n        let updated_by = jwtPrase().id;\n        let updated_time = new Date();\n        formData.append(\"file\", file);\n        formData.append(\"updatedBy\", updated_by);\n        formData.append(\"updatedTime\", updated_time);\n        this.$http.post('/userStudent/importMsg', formData, {\n          'Content-type': 'multipart/form-data'\n        }).then(res => {\n          let code = res.data.code;\n          if (code === 200) {\n            // 上传成功后的处理\n            this.$message({\n              type: 'success',\n              message: '文件已上传!'\n            });\n          } else if (code === 1001) {\n            this.$message({\n              type: 'error',\n              message: '文件的数据的表头格式错误!'\n            });\n          } else if (code === 1002) {\n            this.$message({\n              type: 'error',\n              message: '文件的数据格式错误!'\n            });\n          } else if (code === 403) {\n            this.$message({\n              type: 'error',\n              message: '文件类型错误或信息重复导入!'\n            });\n          }\n        }, err => {\n          // 出现错误时的处理\n          this.$message({\n            type: \"error\",\n            message: '文件上传失败！请稍后再试。'\n          });\n        });\n        this.studentMsgImportFormVisible = false;\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消上传'\n        });\n        this.studentMsgImportFormVisible = false;\n      });\n    },\n    //导出按钮\n    exportInfo() {\n      this.studentMsgExportFormVisible = true;\n    },\n    closeInfoDialog(val) {\n      this.infoDialogVisible = val;\n    },\n    //表的索引\n    indexMethod(index) {\n      return index + (this.currentPage - 1) * this.pageSize + 1;\n    },\n    // 分页的pageSize\n    handleSizeChange(val) {\n      this.pageSize = val;\n    },\n    // 分页的currentPage\n    handleCurrentChange(val) {\n      this.currentPage = val;\n    },\n    //发送请求获取majorList\n    async getMajorList() {\n      let college = jwtPrase().college;\n      const resp = await this.$http.get('/dict/major/college/' + college);\n      if (resp.data.code === 200) {\n        this.majorList = resp.data.data;\n      }\n    },\n    //获取studentList\n    async getStudentList() {\n      let college = jwtPrase().college;\n      const resp = await this.$http({\n        method: \"post\",\n        url: \"/userStudent/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + college,\n        data: this.searchForm\n      });\n      if (resp.data.code == 200) {\n        let page = resp.data.data;\n        // 分页\n        this.total = page.total;\n        this.studentList = page.records;\n      }\n    },\n    //根据主键id删除\n    async deleteById(id) {\n      const resp = await this.$http({\n        method: \"delete\",\n        url: \"/userStudent/\" + id\n      });\n      if (resp.data.code === 200 && resp.data.data === true) {\n        this.$message({\n          message: resp.data.msg,\n          type: \"success\"\n        });\n        //重新获取毕业生信息列表\n        this.getStudentList();\n      } else {\n        this.$message({\n          message: resp.data.msg,\n          type: \"error\"\n        });\n      }\n    }\n  },\n  created() {\n    //获取专业列表\n    this.getMajorList();\n    //发送请求获取所有学生的信息\n    this.getStudentList();\n  },\n  watch: {\n    currentPage() {\n      this.getStudentList();\n    },\n    pageSize() {\n      this.getStudentList();\n    },\n    infoDialogVisible(val) {\n      if (val === false) {\n        this.getStudentList();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AA6FA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MAEA;MACAC;MACAC;MACAC;MACAC;IAEA;EACA;EACAC;IACA;IACAC;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;MACA;MACA;MAEA;IACA;IACA;IACAC;MACA;MACA;QACAC;QACAC;QACAC;MACA;QACA;QACA;MACA;QACA;UACAA;UACAC;QACA;MACA;IAEA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;MAEA;MAEA;QACAN;QACAC;QACAM;MACA;QAEA;QACA;QAEA;QACA;QAEAC;QACAA;QACAA;QAEA;UACA;QACA;UACA;UACA;YACA;YACA;cACAN;cACAC;YACA;UACA;YACA;cACAD;cACAC;YACA;UACA;YACA;cACAD;cACAC;YACA;UACA;YACA;cACAD;cACAC;YACA;UACA;QACA;UACA;UACA;YACAD;YACAC;UACA;QACA;QAGA;MACA;QACA;UACAD;UACAC;QACA;QACA;MACA;IAGA;IAGA;IACAM;MACA;IACA;IAMAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACAC;MACA;IACA;IACA;IACA;MACA;MACA;MACA;QACA;MACA;IACA;IACA;IACA;MACA;MACA;QACAC;QACAC;QACAnC;MACA;MACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;IACA;MACA;QACAkC;QACAC;MACA;MAEA;QACA;UACAZ;UACAD;QACA;QACA;QACA;MACA;QACA;UACAC;UACAD;QACA;MACA;IAEA;EAEA;EACAc;IACA;IACA;IACA;IACA;EAEA;EACAC;IACAxB;MACA;IACA;IACAC;MACA;IACA;IACAX;MACA;QACA;MACA;IACA;EACA;AACA","names":["name","components","DialogStuInfo","data","studentMsgImportFormVisible","studentMsgExportFormVisible","infoDialogVisible","searchForm","sid","sname","major","studentList","majorList","formType","sId","total","currentPage","pageSize","pageSizeList","methods","openInfoAdd","openInfoUpdate","deleteStuInfo","confirmButtonText","cancelButtonText","type","message","searchInfo","importInfo","importStudentMsg","dangerouslyUseHTMLString","formData","exportInfo","closeInfoDialog","indexMethod","handleSizeChange","handleCurrentChange","method","url","created","watch"],"sourceRoot":"src/components/home/admin","sources":["InfoStudent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-card class=\"box-card\">\r\n            <div slot=\"header\" class=\"card_header\">\r\n                <el-row>\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"header_title\">\r\n                            <span>学生信息</span>\r\n                        </div>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"12\">\r\n                        <div class=\"header_btns\">\r\n                            <el-button class=\"header_btn btns\" plain type=\"success\" @click=\"exportInfo\">导出</el-button>\r\n                            <el-button class=\"header_btn btns\" plain type=\"success\" @click=\"importInfo\">导入</el-button>\r\n                            <el-button class=\"header_btn btns\" plain type=\"success\" @click=\"openInfoAdd\">新增</el-button>\r\n                        </div>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n            </div>\r\n            <div class=\"item\">\r\n                <!-- 搜索栏 -->\r\n                <el-row>\r\n                    <div class=\"header_search\">\r\n                        <el-form :inline=\"true\" :model=\"searchForm\" class=\"demo-form-inline\">\r\n                            <el-form-item label=\"学号\">\r\n                                <el-input v-model=\"searchForm.sid\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"学生姓名\">\r\n                                <el-input v-model=\"searchForm.sname\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"专业名称\">\r\n                                <el-select v-model=\"searchForm.major\">\r\n                                    <el-option v-for=\"item in majorList\" :label=\"item.description\" :value=\"item.major\"\r\n                                        :key=\"item.major\"></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                            <el-form-item>\r\n                                <el-button type=\"primary\" plain class=\"btns\" @click=\"searchInfo\">查询</el-button>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                    </div>\r\n                </el-row>\r\n                <!-- 表格 -->\r\n                <el-table stripe :data=\"studentList\" border style=\"width: 100%\" height=\"600px\">\r\n                    <el-table-column type=\"index\" :index=\"indexMethod\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"sid\" label=\"学号\" min-width=\"150\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"sname\" label=\"学生姓名\" min-width=\"100\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"dictMajor.description\" label=\"专业名称\" min-width=\"180\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"graduationYear\" label=\"毕业年份\" min-width=\"100\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"phone\" label=\"手机号\" min-width=\"150\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"email\" label=\"邮箱\" min-width=\"220\">\r\n                    </el-table-column>\r\n                    <el-table-column prop=\"topicName\" label=\"课题名称\" min-width=\"350\">\r\n                    </el-table-column>\r\n                    <el-table-column min-width=\"250\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button type=\"primary\" class=\"btns\" plain @click=\"openInfoUpdate(scope.row)\">查看全部信息\r\n                            </el-button>\r\n                            <el-button type=\"danger\" class=\"btns\" plain @click=\"deleteStuInfo(scope.row)\">删除</el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n                </el-table>\r\n                <!-- 分页 -->\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"currentPage\" :page-sizes=\"pageSizeList\" :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n            <!-- 毕业生信息导入 -->\r\n            <el-dialog title=\"毕业生信息导入\" :visible.sync=\"studentMsgImportFormVisible\" width=\"30%\" center>\r\n                <input type=\"file\" @change=\"importStudentMsg\" autocomplete=\"off\" />\r\n            </el-dialog>\r\n\r\n            <!-- 毕业生信息导出 -->\r\n            <el-dialog title=\"毕业生信息导出\" :visible.sync=\"studentMsgExportFormVisible\">\r\n                <!-- 表单占位 -->\r\n            </el-dialog>\r\n\r\n        </el-card>\r\n        <DialogStuInfo :formType=\"formType\" :sId=\"sId\" :dialog-visible=\"infoDialogVisible\"\r\n            @closeDialog=\"closeInfoDialog\">\r\n        </DialogStuInfo>\r\n    </div>\r\n</template>\r\n<script>\r\nimport DialogStuInfo from '@/components/home/admin/DialogStuInfo.vue';\r\nimport jwtPrase from '@/assets/js/jwtPrase';\r\nimport StudentMsgExportForm from '@/components/home/admin/StudentMsgExportForm.vue';\r\nexport default {\r\n    name: \"InfoStudent\",\r\n    components: {\r\n        DialogStuInfo,\r\n    },\r\n    data() {\r\n        return {\r\n            studentMsgImportFormVisible: false,\r\n            studentMsgExportFormVisible: false,\r\n            infoDialogVisible: false,\r\n            searchForm: {\r\n                sid: '',\r\n                sname: '',\r\n                major: ''\r\n            },\r\n            studentList: [],\r\n            majorList: '',\r\n            formType: '1',\r\n            sId: '',\r\n\r\n            // 分页\r\n            total: 100,\r\n            currentPage: 1,\r\n            pageSize: 5,\r\n            pageSizeList: [5, 10, 20, 30]\r\n\r\n        }\r\n    },\r\n    methods: {\r\n        //新增按钮\r\n        openInfoAdd() {\r\n            this.formType = '0'\r\n            this.sId = ''\r\n            this.infoDialogVisible = true\r\n        },\r\n        //修改按钮（查看全部信息按钮）\r\n        openInfoUpdate(rowData) {\r\n            this.formType = '1'\r\n            //把sId送进去给DialogStuInfo组件\r\n            this.sId = rowData.sid\r\n\r\n            this.infoDialogVisible = true\r\n        },\r\n        // 删除按钮方法\r\n        deleteStuInfo(rowData) {\r\n            //使用rowData里的sId发送删除请求\r\n            this.$confirm(\"该操作将永久删除用户：\" + rowData.sname + \" ,是否继续？ \", \"永久删除用户\", {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                //使用rowData里的id发送删除请求\r\n                this.deleteById(rowData.id)\r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '已取消删除'\r\n                });\r\n            });\r\n\r\n        },\r\n        //查询按钮\r\n        searchInfo() {\r\n            this.getStudentList()\r\n        },\r\n        //导入按钮\r\n        importInfo() {\r\n            this.studentMsgImportFormVisible = true\r\n        },\r\n        //毕业生信息 文件上传\r\n        importStudentMsg(e) {\r\n            const file = e.target.files[0]\r\n\r\n            let msgBody = '您要上传文件是  :  ' + file.name\r\n\r\n            this.$confirm(msgBody, '毕业生信息上传', {\r\n                confirmButtonText: '确认上传',\r\n                cancelButtonText: '取消上传',\r\n                dangerouslyUseHTMLString: true\r\n            }).then(() => {\r\n\r\n                //上传到后台\r\n                const formData = new FormData();\r\n\r\n                let updated_by = jwtPrase().id\r\n                let updated_time = new Date()\r\n\r\n                formData.append(\"file\", file);\r\n                formData.append(\"updatedBy\", updated_by);\r\n                formData.append(\"updatedTime\", updated_time);\r\n\r\n                this.$http.post('/userStudent/importMsg', formData, {\r\n                    'Content-type': 'multipart/form-data'\r\n                }).then(res => {\r\n                    let code = res.data.code\r\n                    if (code === 200) {\r\n                        // 上传成功后的处理\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '文件已上传!'\r\n                        });\r\n                    } else if (code === 1001) {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '文件的数据的表头格式错误!'\r\n                        });\r\n                    } else if (code === 1002) {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '文件的数据格式错误!'\r\n                        });\r\n                    } else if (code === 403) {\r\n                        this.$message({\r\n                            type: 'error',\r\n                            message: '文件类型错误或信息重复导入!'\r\n                        });\r\n                    }\r\n                }, err => {\r\n                    // 出现错误时的处理\r\n                    this.$message({\r\n                        type: \"error\",\r\n                        message: '文件上传失败！请稍后再试。'\r\n                    });\r\n                })\r\n\r\n\r\n                this.studentMsgImportFormVisible = false\r\n            }).catch(() => {\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '已取消上传'\r\n                });\r\n                this.studentMsgImportFormVisible = false\r\n            })\r\n\r\n\r\n        },\r\n\r\n\r\n        //导出按钮\r\n        exportInfo() {\r\n            this.studentMsgExportFormVisible = true\r\n        },\r\n\r\n\r\n\r\n\r\n\r\n        closeInfoDialog(val) {\r\n            this.infoDialogVisible = val\r\n        },\r\n        //表的索引\r\n        indexMethod(index) {\r\n            return index + (this.currentPage - 1) * this.pageSize + 1\r\n        },\r\n        // 分页的pageSize\r\n        handleSizeChange(val) {\r\n            this.pageSize = val\r\n        },\r\n        // 分页的currentPage\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val\r\n        },\r\n        //发送请求获取majorList\r\n        async getMajorList() {\r\n            let college = jwtPrase().college\r\n            const resp = await this.$http.get('/dict/major/college/' + college)\r\n            if (resp.data.code === 200) {\r\n                this.majorList = resp.data.data\r\n            }\r\n        },\r\n        //获取studentList\r\n        async getStudentList() {\r\n            let college = jwtPrase().college\r\n            const resp = await this.$http({\r\n                method: \"post\",\r\n                url: \"/userStudent/\" + this.currentPage + \"/\" + this.pageSize + \"/\" + college,\r\n                data: this.searchForm\r\n            })\r\n            if (resp.data.code == 200) {\r\n                let page = resp.data.data\r\n                // 分页\r\n                this.total = page.total\r\n                this.studentList = page.records\r\n            }\r\n        },\r\n        //根据主键id删除\r\n        async deleteById(id) {\r\n            const resp = await this.$http({\r\n                method: \"delete\",\r\n                url: \"/userStudent/\" + id,\r\n            })\r\n\r\n            if (resp.data.code === 200 && resp.data.data === true) {\r\n                this.$message({\r\n                    message: resp.data.msg,\r\n                    type: \"success\"\r\n                })\r\n                //重新获取毕业生信息列表\r\n                this.getStudentList()\r\n            } else {\r\n                this.$message({\r\n                    message: resp.data.msg,\r\n                    type: \"error\"\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n    created() {\r\n        //获取专业列表\r\n        this.getMajorList()\r\n        //发送请求获取所有学生的信息\r\n        this.getStudentList()\r\n\r\n    },\r\n    watch: {\r\n        currentPage() {\r\n            this.getStudentList()\r\n        },\r\n        pageSize() {\r\n            this.getStudentList()\r\n        },\r\n        infoDialogVisible(val) {\r\n            if (val === false) {\r\n                this.getStudentList()\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n/deep/.el-dialog__header {\r\n    line-height: 23px;\r\n    font-size: 24px;\r\n}\r\n\r\n.header_btn {\r\n    margin-left: 20px;\r\n    float: right;\r\n}\r\n\r\n.btns {\r\n    font-size: 16px;\r\n}\r\n\r\n.header_search {\r\n    min-width: 1230px;\r\n}\r\n\r\n.box-card {\r\n    height: 818px;\r\n    line-height: 23px;\r\n    font-size: 22px;\r\n    text-align: left;\r\n    line-height: 23px;\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.header_title {\r\n    line-height: 40px;\r\n}\r\n\r\n/deep/.el-form-item__label {\r\n\r\n    font-size: 17px;\r\n\r\n}\r\n\r\n.el-table {\r\n    font-size: 18px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}