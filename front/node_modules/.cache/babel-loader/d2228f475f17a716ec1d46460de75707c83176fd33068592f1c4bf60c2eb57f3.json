{"ast":null,"code":"export default {\n  name: \"LoginForm\",\n  props: [\"accountName\", \"type\"],\n  data() {\n    var validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    var validateAccount = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入' + this.$props.accountName));\n      } else {\n        callback();\n      }\n    };\n    return {\n      formData: {\n        password: '',\n        account: ''\n      },\n      rules: {\n        password: [{\n          validator: validatePassword,\n          trigger: 'blur'\n        }],\n        account: [{\n          validator: validateAccount,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          //前端校验通过，发送ajax请求\n          alert('submit!');\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"AA0BA;EACAA;EACAC;EAEAC;IACA;MACA;QACAC;MACA;QACAA;MACA;IACA;IACA;MACA;QACAA;MACA;QACAA;MACA;IACA;IAEA;MACAC;QACAC;QACAC;MAEA;MACAC;QACAF,WACA;UAAAG;UAAAC;QAAA,EACA;QACAH;UACAE;UAAAC;QACA;MAEA;IACA;EACA;EACAC;IACAC;MACA;QACA;UAAA;UACAC;QACA;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","props","data","callback","formData","password","account","rules","validator","trigger","methods","submitForm","alert","resetForm"],"sourceRoot":"src/components/login","sources":["LoginForm.vue"],"sourcesContent":["<template>\r\n    <el-form \r\n        :model=\"formData\"\r\n        size=\"medium\" \r\n        status-icon \r\n        :rules=\"rules\"\r\n        ref=\"loginForm\" \r\n        label-width=\"50px\" \r\n        class=\"demo-ruleForm\"\r\n        label-position=\"left\"\r\n        >\r\n\r\n        <el-form-item :label=\"accountName\" prop=\"account\">\r\n            <el-input type=\"text\" v-model=\"formData.account\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"formData.password\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button class=\"btn-login\" type=\"primary\" @click=\"submitForm('loginForm')\">登录</el-button>\r\n            <el-button class=\"btn-reset\" type=\"danger\" @click=\"resetForm('loginForm')\">重置</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n    name: \"LoginForm\",\r\n    props:[\"accountName\",\"type\"],\r\n\r\n    data() {\r\n        var validatePassword = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        var validateAccount = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入'+this.$props.accountName));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        return {\r\n            formData: {\r\n                password: '',\r\n                account:''\r\n\r\n            },\r\n            rules: {\r\n                password: [\r\n                    { validator: validatePassword, trigger: 'blur' }\r\n                ],\r\n                account:[{\r\n                    validator: validateAccount, trigger: 'blur' \r\n                }]\r\n\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {//前端校验通过，发送ajax请求\r\n                    alert('submit!');\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped lang=\"less\">\r\n/deep/.el-form-item__label{\r\n    font-size: 18px;\r\n}\r\n/deep/.el-form-item__error{\r\n    font-size: 16px;\r\n}\r\n.btn-login .btn-reset{\r\n    font-size: 18px;\r\n}\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}